 $Id: README,v 1.11 2003/10/10 16:38:35 flanigan Exp $

================================================================================

         README file for esmf_build_config directory.

================================================================================

The files in this directory are the site specific makefile fragments
for the ESMF build system.  The subdirectory conf contains the site
specific configure include files.


ESMF Build System Overview
--------------------------

The ESMF build system is divided into two parts.  The first is the
series of makefiles located with the source code.  The second is a set
of makefile fragement files designed to be used by the source code
makefiles.  Makefile fragment files are files that contain makefile
syntax defining build rules and actions, but do not constitute a
complete build system.

There are two makefile fragment files that are used.  The first one is
common.mk in the build directory.  This file is designed to be
included by the top level makefiles.  This file defines build rules
and variables that are used across all platforms.  Users should have
no need to edit this file.

common.mk includes a site specific makefile fragment file located
in build_config.  The included file follows this naming
convention:

     build_config/ESMF_ARCH.ESMF_COMPILER.ESMF_SITE.mk


ESMF_ARCH,ESMF_COMPILER and ESMF_SITE are two environment variables
that are either set by the user or are given default values in
common.mk.  (These variables are described below.)

The site makefile fragments specify makefile settings for particular
architecture and in some cases specific compilers and machines.  The
ESMF_ARCH value used for the first part of the filename specifies the
architecture that the file should be used for.

The middle part of a makefile fragment name represents what compiler
that the file configures for.  It will have one of ESMF_COMPILER's
values. If default is used, then the default compiler will be used.

The ESMF_SITE value used for the last part of the filename will
either have the value default or a machine's name.  If default is used
then the file in most cases can be used with any machine of the
architecture given by ESMF_ARCH.  If a machine's name is used, then
that particular machine uses makefile settings other then the default
settings for its architecture.

Current site files for supported platforms:

      build_config/AIX.default.default.mk
                   IRIX64.default.default.mk
                   OSF1.default.defalut.mk

Current site files for unsupported platforms:

      build_config/Linux.lahey.default.mk
                   Linux.intel.default.mk
                   Darwin.absoft.default.mk
                   SunOS.default.default.mk

Notice that there is no default compiler value for Linux or Darwin
(Mac) machines.  This is because there are a number of Fortran90 Linux
compilers.  If ESMF_COMPILER is left unset then the default value
for Linux machines will be lahey and for Darwin machines absoft.

The build system can be ported to other Unix platforms by adding new
site and conf.h files.  The new site file has to follow the naming
convention used by the existing site files and be created in
build_config.  The new site file will also have to define the same
makefile variables as the existing site files.

The conf.h files are used to define machine attributes within C and
C++ source code.  The build system stores the conf.h files in
subdirectories in build_config/conf.  The subdirectories following a
naming convention using the environment variables ESMF_ARCH,
ESMF_COMPILER, ESMF_PREC and ESMF_SITE.  The naming convention is:
  
      build_config/conf/EMSF_ARCH.ESMF_COMPILER.ESMF_PREC.ESMF_SITE/conf.h

Like site files, new conf.h files have to define the same machine
attributes as existing conf.h files.  If a machine supports both 32
and 64 bit precision, then two conf.h files and the directories they
are stored in are needed.  Example:

      build_config/conf/AIX.default.32.default/conf.h
      build_config/conf/AIX.default.64.default/conf.h



Environment Variables
---------------------

 ESMF_ARCH         Variable describing the current
                   machine architecture.  Default value
                   is value returned by uname -s

 ESMF_COMPILER     Variable specifying which compiler to use.  Value
                   can be default, absoft, intel, lahey or nag. 
                   If the value is default or ESMF_COMPILER is 
                   left unset, then the default compiler 
                   will be used.  Exceptions for default values:
                   On Linux machines the default value is lahey and
                   on Darwin machines it is absoft.

 ESMF_PREC         Variable specifying the precision.  Value 
                   can be 32 or 64.  When possible the default 
                   value will be 64, otherwise it will be 32.

 ESMF_SITE         If ESMF_SITE is not set or has the value of
                   default,  default build settings for the
                   current machine architecture and compiler will 
                   be used.  Values are created from a machine's name.

 ESMF_COMM         Defines which MPI communications library to use.  
                   Many times a machine will come with its own MPI 
                   library and in those cases the default setting 
                   will be mpi.  Otherwise the default setting will be 
                   mpiuni so that the mpiuni library will be used.
                   Other possible settings are mpich and lam.

 ESMF_BOPT         Variable specifying that the build system
                   use either debugging  or optimization options.
                   Value of g specifies the debugging options.
                   Value of O (capital oh) specifies optimization
                   options.  Default value is O.


In addition the top level directory path of the source code being
built will have to be specified.  Those variables are described in
detail in the README file of the ESMF source code being built 
(e.g. framework, EVA codes, implementation report examples).






