%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - zcoord ESMF.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030406174414-04'00')
%%For: (Chris Hill)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 144 36 864 468
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
144 36 moveto 864 36 lineto 864 468 lineto 144 468 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 15
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
144 36 720 432 rectclip
[ 0 -1 1 0 108 612 ] concat
/N12 [/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

%%BeginResource: font GEKHJD+Arial-BlackItalic
11 dict begin
/FontName /GEKHJD+Arial-BlackItalic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 250 dict dup begin
/.notdef 
<10bf317005b6d62b4bd81b3723372ea97859acbc8cddbd4030d00d3a731e
9692943ed172c74a98e5024afd88> ND 
/space 
<10bf317079c738be10> ND 
/parenleft 
<10bf317021c392f0e0f198164820e9ddb76b07940d35649e575aacfd7d27
27f615e67e7df6ecbe9f2050320c616134723eaa00eea23b06412292e7d6
1075c3cb> ND 
/parenright 
<10bf317093dffb9989f3ec3fcee5cd3ac8cfa86b550f80c92884cb216a39
d18b6704c83883d5c64e1c70cb02341799f29e16438c5af339dff134ef16
b2e3e654> ND 
/plus 
<10bf317003f30f3f20a2e4442d4135d7bc77d7be8b3369b9b2eb2e91e10a
ddf08471a2a19f7589e8b041e211b444708d5df679> ND 
/comma 
<10bf317089e049454e149d5bbb0f7c537d910670942687762c8192e50246
11bc66a0245e2ce951de57925ecc447299a06e746ba937780cfcc783e811
82d5e1540db8bdfbbb10278ab261cc83> ND 
/a 
<10bf31704fabc08e037b78e24cb42655f2d954b89feed6e727203296acb7
b6b796e1d04454ba63b8d708bc636ff49ea6d95be38996f3e993ce31406b
222dc929ff1ecd2a9b3ab1a2fc2faa4c6ffd27b148b1b9d0ea2b0d109806
8f7e7bf5b12bf07c89dfe91891be58f1a443a6cfa3425459bfac794f5365
915a4e145cf434d0484347dd2484d1d10080d69cc1e372d065c5eb9726a1
23ecf12fbcf205616f909195f8e595ed737c8e4c5acb8a7330313b2d1408
5e29ab4ffd31392ea58464d869037129a5ae4f1afb0c0d5408d9aa9a4b> ND 
/c 
<10bf31703a9abf74162e39f0da2503b404a100ba36b73e2d74dee11733a2
04fa3314b519ffcafcc4de286c52d3e4cedcfc64459e99c129cc4894f5da
4070500a294b61494b6d80ab52dee3108862fd434415440808fc8949656c
77b1f212a99ff35fb6302a5e465c4b9bd3f387e8> ND 
/d 
<10bf317035a2d0df19fa9018d5088f486cbd55643718c2f36b822702f8bd
9d01e8090b6830df2424a3a90101b84ee64a2e621a2dfb6c627db0e121bd
a058ea099c690019073475db628ebfbb8035fc487378857ccd30a885fa86
74ffd4f514ee91c1cfc797efbc0355c1a2925a1b09d1b9f09b10a2f1dd3f
f9a88b6c91c6f6856aed207252e584afb9cec1efd1633753ceef48> ND 
/e 
<10bf317035a2d0df1983824c113d2ab776e261d37ce5de617a117bc3aebb
adce89fc126f945c26e403ebf81178adc15adad88f46cde2ddad174949b4
0ee15b4586bfa45b89cf32b14f393c6d057c3f727f438d26ccab1f661512
fb9d55e7549970b49336726e2b6e827e623a1b1018a48fa688a4162f2b48
59f72f53406f3c5c92df3a9202054a2f740b2f03c7da589032ce11e9ee93
73f341eb9db208> ND 
/g 
<10bf31705ac8db6e3ecc45827c9a390f43c0ab3876ea9ab321516234bb5a
0ae8d0781de6e7f0e786400bf4846fcd47e64f112392dea9d246cf35448b
34821fa72052db4644246cefd44b75c4a690b0278456dc5b25fa69cafb01
245a67ea4e9d714ec154fcb24af4dc7c3f4e7e8fffabf2bed6c1682c1a13
289dd981da52da056b1d05d1e5502cc951298f9ee4917eb0e6c2dc322202
d9c704953762e48cb82c1136c4793a5fedcf899c978624bdc04b6c7b32d3
dd5c06d49afac20795697edae6f9a2566b98a9f5a5ff> ND 
/h 
<10bf31705b060f109baf78eab03e60e0ce15257aa8768f5e709bdb6f8d2c
98e4dd903b0b8149ec040b3995d783c8c56f3b7940a45145dabd09aff1a2
c8519c08fe1b830d395104b11af36115da308e4c98e3ce66b459b1b6c8e1
1ba22492e0b4b7de428cb7e7> ND 
/i 
<10bf31705c393b9a233e3793f38e0d0796715ca9ab62c86b263704eaa780
ac25ce0b18201c8fb202f161af5e3470ba1d4bec> ND 
/k 
<10bf3170422e6230a653975c2db5bb816eb0ba5b07c68e33deddf78e5673
6a9791941152237345cac45989f379b9e14aac89e39bd3c99b2505069127
55ca520c3b> ND 
/l 
<10bf31705c393b9a233e3793f31a40bf5234fdaecbb0756a1826f24769a1
0e> ND 
/m 
<10bf3170586e5157509d514d4e43ba605e02e3be902574524c712f80a08d
f85900bc8bbc25008f8e7f06db3984842ca45305997cad3940ea35e89a69
d01c2336a18073fb434bfbcaa2a330c0f9f0dcdbf01b6e52cf94090716f1
9520d05ce8de10199f4948c12e591ef288af8edd18b54953d3721f692745
9efb241001244fb2c0a46b85188540c3defee3851aede18c98ca7f96f842
6413ae645f938f326a003a0bca93937096824c9872434b0cf1ec4cb0f86b
> ND 
/n 
<10bf31705b060f109bbe617bc65979376be3bbc75385704ff89da91f3dbf
07e4ed9d12400e4a36a4ecfac64aed0bcd58e3c1e69d07b781f9707594d4
8828000327f92ddf2561ea033afea28572884ef114cd021ddb519f46ff0c
d2cf0ec48169378c03cee1> ND 
/o 
<10bf317034746229a843fd9fe843cdfc67b846ee4c893aa33b1f4757d7cc
e90443040f73e4a9b0fb65491554bda324d616ab254b38b442ee0857c7a9
b635722f4e63eb5a4f1a6773e51a1437f6f72af9572f776f80718a3cfed1
5c797b13d6852e7fa4ec12259bb68248b147ec6f38fa448f6d28026badc2
20232fe75b0b015ebafc9e43a16b01e3bf83f81233c22f75fc18> ND 
/p 
<10bf317089eedd1df69ae84c53a6882af4cd9694fe3865c1c8590a4d97bf
2f8e44fccb68d54ee8529008ac68cdadb86be307642376599152a7453ffa
a7fb0254d5a5c2ada9f522512dc9e7f17740189d53bf41cb5ca4f9bf220c
13844e2ea422e25fde9a0a9b843faafee243f911ea92eacc3243576684fb
4fb3cec9e05b5047908b4e18144373ccbdc181040aa499da8001> ND 
/r 
<10bf31705b07bfafff918123d82ced08f642a7c39762f5bbe57239e8c5c2
c2cb7b65126fe617f331701bac4eb72443bb3fb2ea8982e35f9f99508c03
4893cc916070e2a4aa14ebbec1b192b6e92174fbda75> ND 
/s 
<10bf317051173aa69929fddec79d0a0a3782d9afb9d11f72efb390d774bd
f1dcbf090606b1f8424b2f8e93d97a436240679008a7150521b056254e48
63643c40f1ee88e49200cd399c00fb7b5a935a0cee761a80b49a17d2be21
b452bccb125910271703823847c172bceca762f053adf6604cc268935a82
a033b193e87dd4a8eb30fff48890d6870b712220653be5b6034844033d08
7bf0fae2c4afd241ea638776478db941711517635046d48107ba00845bdd
b86a461b> ND 
/t 
<10bf317020945a32802d814772cdb85f8a015a659b36d4452f20a4ca66d6
2cf640548547f3c41cd8e80311244eef5e0cb37f2be3a38bba6b0db43f82
f03e0cad968de11b2934504b22a31c5cdd256a0bc3fe5ede380afbc2fa7f
557f6e55b6c9d407f781fccd> ND 
/u 
<10bf3170383fd5d78d924b9a4dc7eee652a895cda430ae088a82a9679a53
6518e3d648dd6df3237bdb5197aa1bea215c64edeebb4ac417579d084fdd
717efb262b2ee4ba5ec49fcd1217314b78b6785572bede58532b138181e7
dd06ce1b30edf2443bd8072ba1cdffc293249caa> ND 
/x 
<10bf317087835a6685e1e811831de3cf60899313524c324e7c2a5ecf72cb
19767ce613739907d90818d70a0dbe74e7766f99e7be3b8176b19a61679d
08bffdbe5a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GEKHJD+Arial-BlackItalic findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 160 /space put
pop
%%EndResource
[/N15/GEKHJD+Arial-BlackItalic 1 TZ
%%BeginResource: font GEKHHN+Arial-Black
11 dict begin
/FontName /GEKHHN+Arial-Black def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 669 dict dup begin
/.notdef 
<10bf317079c9f7e6f4a76ea2d02422e07fe11e19b4a139da6f8f895f7412
1dbceb2d7071d0a09ba3c67734> ND 
/space 
<10bf317079c738be10> ND 
/plus 
<10bf31703bcb857284f42fb03219413d46f4675b8c9bd78509d9a40c98a7
de363bc8db8e1f575f1150dcd89ac26cc3585b> ND 
/comma 
<10bf31703a9458c021c34e0f7bdc5012b5fd566318f13fe2d3afd4ef9cc3
edccd368548ca0fff3c1b2c6c0a580cbc6103ec1533a0afb> ND 
/period 
<10bf31703a9458c021c34969865034b9846cb5c62bfd5e58> ND 
/slash 
<10bf317079c7734b86b7c02a8d0d16be6023c964ebae98822814> ND 
/one 
<10bf31702f7da4977f6daaaf2d253a8872fe5eaa79ce4e7fc3c39d0af1d7
7ec697cae17d3885406904a0fd945f7c037ba2ca7040ac52303083e6> ND 
/two 
<10bf3170573f824b1d94f426888058afd65651d71c50ea920349306b0954
326a49b3d5e35f4c411906c20a6a0b2fce54425983bd067f2b33b6070393
cbfdcf29d2bf06c160d497b80fbc9f8e4614776ab956b95f12394cac4c14
b8ba2afd9f4996cc0d2fefad2bbf0c203c4615905f5cb21b2f2df2bb60cc
4630f7775b6db789c225a100a685350142a74c5fb7f70825a364ad053072
21df0e9e> ND 
/three 
<10bf31705c37125ec97fcb8865502626c67df8025aa51e97e5187eff24d4
3365ad8f66bf811ba90ad46422839ca4b28bd0a5778325d2da7c53bc9d76
ed1da7dd9e92adfb51b95b8da66628800e304672f687385192ad33c87a50
866ef6cf9b34ce5f5dc66a26f38df2e6207f1f85bf2c27f6010e167da6a2
75952d66e88f34a3961018bcf2741abfa28a93e2af59ffe91ad66f410a55
762c66851257a989a3827875a120726b75f70bbcbac128171881741ce186
b7c0d33d7fa71a4c1e04f3027ee5427e5c9591be4338491d02a126b2952d
42d1fd66102859453b2a710f0a58673a2a00e831> ND 
/colon 
<10bf31703a9458c05de3b8fe90bffb989753b817388314a906a65354ac29
337974fe34f4fdeecab440> ND 
/A 
<10bf31707ec198a01bddc3a32219ff6b67a28292ed661e018f387d20af35
e41f4164655f4523ea769c93507ad2dfa13e6e354d66d638bc7241847874
> ND 
/C 
<10bf317048540ed416f5c7edea9f76b4c8cad5e3c74e6d07b83fc2d81cc9
090aed619416287fa550c116d1829f3586a0b1795fd8320fb77a0cfada5c
6eb5a54bd46e745b75eaf0e4c83eec3978d00f422d509938915d171baa04
4940f80ff4d0a8d773c7d5f62640353b4a80043fa8b0d1b85d0e195512a5
56b2104cbe47a3f9f24dd4387c532830ec23346a609c0e7defcef722a9a2
4aa14f199f28e49d> ND 
/E 
<10bf317026ba2bbce92b98382c4d4bc3f4ea87e4c366a83c633d7aa0708b
77b31ae40f046eb70a3f0809ee386e506dbd> ND 
/F 
<10bf317027e8d0b4577bd2842d7b097fc15e41cb7b8a22c29e2996971b68
31146800ef21b2afdccde65d> ND 
/G 
<10bf31704be1c451f8cbcd8c9d76de59ae7447c70755718292603ec851d9
a19bd2e1202b728f3c1fe33c3aee872bb243411d8a5d2c7fe554cbfccde0
1a7636864117d04c9f50ec418c7ab7b1c4d5a88f19876d328cb0486af2f9
dbdafff2f5383747d9f118ad6cf0b25c0db3cff39fa218fc784453ab1b73
f80b08b42da9f5acfc0628d6307f254a181d7dd8adfef7c66bc6c404b201
af052fb52509207b28ef2982bd03a410> ND 
/I 
<10bf31702f7ca5c3eb53514639cba43a1c985eb55410523f> ND 
/L 
<10bf317026ba62064607d442836641aab926322ba93590810ad3930fbaf8
> ND 
/M 
<10bf31702096e3e06a889e68fbdff68fad6b2ca99b81a9b6ad05b7ce7fed
6d98cc4fc87b32e7c0a4d83596a95d88d91fceb5bae6609c5ae7d42d60> ND 
/O 
<10bf31704ab38a9184e563861c7f6bc72f63cba06e42718da1344f696a12
6cb2a14841741547c054b73e2b2b3106921c396fd9fd727cd080e0e1bb4e
7e6867607dd15f39338384c92d0be4783417ed59faecc01843a94e059fd7
2323b0bbb3a8935ab40bace79ac938f09d8fbdbd3fe4ad6c061fc00f2745
271928df21d117eb8fcd08f6ec0dd78a5d21984cb9367aea0f5ff60b703f
> ND 
/P 
<10bf317021c2da7c3428f5a5ec4f581fb6214206d2bc73583cad36054093
2bcad3b7be9eaafaeb12f2abb205ac60bdbfe309151f43207a436e4ddc36
3aeca2cda5617259a779ba790880c13fd3a248f9d54e286f14941fd11442
503230bd6ed6> ND 
/S 
<10bf31705c375b3d71bca25137f385273231fc57b96d36e399385a23b090
335918efa1564609a3ea090da6723509963d0f0cfa979a71df6fb64928c0
52cbae6aa1e86863197f356a828e73cabaf9d8965736657da9f318385fa3
fc8a4c4dfcb474dd43a9695ea4c714535e959dcc4f11304b0f7947f19e6c
efd619c5fd529416e1752e79ad2afaa1621a8c9ada06465c6ec05e1d81ae
6e2e7081129afa718d2e104f25f41ba4a9e8087c04ca1f70ba69003590ef
03f0626fd83f2731880e1bffb199023e0b36bfdcaa53e9adec1790dfbd7b
81> ND 
/a 
<10bf31705d65c0901c0eb0ca73cdcec654d1f6e29720ee6d5fcf191d8c5c
069fa8ec3ec4cdee5e0d745daab04df2d20100843ef4703ba1eff32c3d6a
d8ceb776d390df59bdf04657f21b800b09069e50459d0c84b261103da934
5046e6429da330513a74515382d0c2d6f08ad90fe1848add0d1ac69ce5f3
8584c16a31f795bef48ebe998b8e9e31afcb676fd8d69fa87ca9ddfe9cbc
22c896f98e1f68b3eae2a769c43a5a56902407d7c18351bcb0d522627309
7cd0c838defbdbda3d85ebe7789fc507ef2d6173f66598e68dc2fc7e1d89
d511a91c3c410458321cc0c357590f34113ca4ecd28305de95220b79076c
69cb3df6eaeba55f908a845324b81a6c7b> ND 
/b 
<10bf31703a9abf74652c3c36669af8ae117dfe4f09db600586417de6c886
cc0fc2aa97eeee7d94509a45c9ba701965aac515369c0ec5fa25e841264a
1c6c255f61ff32e939f5000312ff2cf227c2b498d8e0432f0eae355aae41
9bee8b43e5d1d6af479b66ea89ccb86b25224d191df130f356f8f16448d4
ed2ed8cb06cea283f958addee51d7d7f39ee7efcab998379137667546d75
9e> ND 
/c 
<10bf31705d65c090134accaf52aaf38802d2a9c876dfad655de313863bab
18dde364fd70b7c22096a0ec3f182805c006f531d1d6c7c4cfb16a3c29de
3f4fbd7b2cde92b5160e7587cf7d02d1cb9aae5315966e6227c3cc74f627
8ce1411945214a616f1ec7677e1c009023e6cab135188c1870f8fb32ce73
3334eb56a75e4cedc073d0a09ead463984c3cff6ce765a1214add9e3e253
624f7cde5088ec477452a056e0ed505b1ab07c4d> ND 
/d 
<10bf31705c37125ec69d6d8939d287bfbdc7490c048d24e8fe505cfc4d2a
f542dc58d5af801a3cc46797624cdfb2810a3e73577921314788af1e5263
a0bb977f71e941c08c79ffe796fd942853524c094c9c6d30938b14bba8b6
6ac11f9d764366223ad9b4aac060dbc777819e6c96831ccfedae0aa0fbec
ed4c3d59f2a7ffd18c17d9e25aeed5ea7aeb8c9540ef49338c04> ND 
/e 
<10bf31705c37125ec676d5427210890aa7fc4792270bb4fc2d0a78beebb1
c681b1a26afb28f0dd1cb8b7a1297e16cebe801b4eca87cf1552a7780f9a
d2ed1584acdf5e2092edfa4a3c37b576540d20bf4e97cab6b590ddc238c7
cafa5aa8653626fca29b9d099255963499668928601bae22b10ea71f81fe
c8ad0db46d167696172689ab522c1ece41c2741c859645711e39bf7a9de0
60ec98422980b1f6> ND 
/f 
<10bf3170612e19b7633718c5ff97f231dcc90b9b271df3b7f32311141d3a
abacfdd46ae930fb64e8a97a64fbaab776a56f8656861042d4ca7da06bdf
347df12198e4be9e555e64d7f3d0ef3804bba900f906d744d6ebfbcee492
494eddd5dfc51f8274a410ebb1844c92bc> ND 
/g 
<10bf31705d65c09013587d041aca6e99d0aa6aeea99c427d78db28416c03
6808e877ac9cbd39c1baf3b076131fc4e0b121710bd0e2fc841349d7fe0d
bce83813d99ddd361356244a7e978a541e0dd09ac10382755f56e6f1500a
c753efb1f5b5885dcfaffa8731fc715a2e62473793a0fc990fcf19fe1bf6
d24524b111c326744f113bf040b4df185bc736cc5029a1c0641aeeae481f
b4c8c8074d35a39cd601640bc5d0de86ad49be47b7bd46b34174d60a8d44
2c5ea2b903a0a452945115000c50bfff2bf19cc9e2f3942cfe38a4c1faa7
66332f36fba5de6e18d021f9b02e65> ND 
/h 
<10bf317035a2d0df6af2263a8cc8c84f6398e142ac1dfadbd2695c56df7f
8971c57ab92c4ccfa7a3c40bda5d7df5933f7f939694d9212de5db700fb9
01cf1733ae763d6ac5005c07f6ca01dab1770ae15b6d709d7a2e9833ec08
af31> ND 
/i 
<10bf31703cf7234d88714f07ad7c762325c8b555cfeaf0c4ae714251685a
5215e1c5a454da2b708df5> ND 
/k 
<10bf317035a2d0df6af2263ec5682b4ed91739395dd1426a7e0cc2726d62
326bac5e883984f34f0dc224d3fd89ac2d8e1b8f591641ce52> ND 
/l 
<10bf31703cf7234dfb75158095b38eed26cedf810bccae5a> ND 
/m 
<10bf31703bc83e7d42638175f0cc5430e11184cb5c46734e26da4afefb61
446595670ea15900baae1e20b900b51ad650b9410f2afd23705ca807b6cb
ebf6224df247783877706f39b14df5e674761ef04f23f06fdc6b7007ffcd
dab5b636ca090a4fd2a127d859bcb85d42e724f1f7995a34e75d23aabec8
6b85187b857a5b0ab926d1f6bd6f1318dc345d54b4da1fb56ef9d933860e
be85773fdc458e6c2ce94df1a5> ND 
/n 
<10bf317035a2d0df6af2263a8cc8c84f6398e142ac1dfadbd2695c56df7f
8971c57ab92c4ccfa7a3c40bda5d7df5933f7f939694d9212de5db700fb9
01cf1641fe3fe77a8e2480abfe9d8dd27485888d54d51454607e6c7f4883
fe> ND 
/o 
<10bf31705d65c0900175195cc581b0e2d516a3ace3409b0e2b107a544960
80ef4ec854a6d44792a87a5c947a658c96cffc01a2823498d64ac5e0db08
d419a005a803d694e028a1075116641055bd4866daebdc08712904b85f36
8c34590a11f3b6e5af478b8c007718df38a46500460b1d3bfcb762978cb4
edd14e0421cb12d79975aa> ND 
/p 
<10bf31703a9abf7419af6da0aace34caf6034877bd4594d195ccca57c15c
53d2971f1ab2a928412660e4b9761045d47857759550fcd08d3224443379
b3a5a6cd487be27864e6b6a8f9ae49293c2320e7155e3b2a263a1fc3c17f
1d7041e8c314a589bc1dcf25de8d3665c90ef2f20a42027789a23b9bb6cb
71cca44c439e052cd13be7e382208ea2be4b76d4f4f8e9b8f864> ND 
/r 
<10bf31703bca8e2a1d90f2e794dd4804840f0848d426fb931dd8a97cf5d3
35b281fcb8f1e68cd75f064f814ba026f553bf146cd92c8db810d0c2deb3
fab95e8efb624464fca3160f> ND 
/s 
<10bf3170560fa98458be61e1f8c1a8f24bf8b6771f76c2db9b110ecb52b6
f1aa4d6a3d67ad2656414e3d5dccf5996f69851a0d0b8fb8da3ee0683ad3
4f6dde942f2308e0f0507c443fd8541bed911f7be1713d68b90aecc19161
fb3290b2d2ba570b5ad82727a14d34a755a51da523a574283813feecc7b0
75b11bccbe188173f1657daf8752b6b2096f652ccce4d46db775252c40c3
4913c2973c75e83a87b2bdbc9adb7a0e47b0feadd3e35794573e5c447c0f
9f94ec7d6415180282e4f36d1dfb44b66ad450593fe67a2494afc2f86bed
4f019829217cd9982cfd206d5a67> ND 
/t 
<10bf317054a2e2bd602d8f8ea5dfc6150d0ca4e7c37251b9314938bc8860
bfbb4ba4c7aa933125e614aaafd4804e22d232d8858740954d3970cff28e
e17d08c1797b6737d1e66570ea2e8cd40aee79732a54a0b50b26f21fceb2
07f9be42cb0cecf7> ND 
/u 
<10bf317037014e5130f3ca3b153be847c6299565ae7f10c82f0f45d61e8d
f36cdefadf2291f6df8fc4a9b07573eb4636bd5cbde1097e804ee5fe9dd7
6d5422d0f3baf0aaac3507252777d2567e215757f3c30578e9f28298563d
afeacb50> ND 
/v 
<10bf31707ec0cf61f1ec831be9006054ddf5e9ecfa60cb4cd36931419fce
1b84a4da42412ee7feb5> ND 
/w 
<10bf31707ec291af08a01b172120fdd9b01360b152ffa3816aedd0b9fee7
d57e85161dbfa6c412d6e0b7b6d4433cb73920de1df2d16e974fe70eeeda
33bd00> ND 
/y 
<10bf31707fff689716732f7c0aeffde2a2142b6b5f7beb1bf090d4ea980e
5b57c89608a386dce4d6b99ba7ce5d8889db354f61fbc6c0f07da5d47900
f9fb226abdee5f556d76d88f8039b2c20b8efd175bdcc1> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GEKHHN+Arial-Black findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 43 /plus put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 160 /space put
pop
%%EndResource
[/N11/GEKHHN+Arial-Black 1 TZ
144 36 432 720 re
W
n
q
n
36 756 540 -720 re
eoclip
n
n
36 756 540 -720 re
[/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 
0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 
0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 
0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 
0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 
0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 
0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 
0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 
0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 
0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 
0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 
0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 
0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 
0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 
0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 
0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000 }
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/E1 exch /ColorSpace defineRes

cs 1 1 1 sc
f
Q
/E1 /ColorSpace findRes cs 0 0.800003 0.604004 sc
338.22 50.76 m
/N11 [0 19.98 -19.98 0 0 0] Tf
(2.)
[13.3485 6.67514 ] pdfys
( ) show
(ESMF)
[14.4472 14.4472 18.8828 13.3485 ] pdfys
( ) show
(provides)
[13.3485 8.89277 13.3485 12.2296 6.67514 13.3485 13.3485 12.2296 ] pdfys
( ) show
(a)
[13.3485 ] pdfys
( ) show
(toolkit)
[8.89277 13.3485 13.3485 6.67514 13.3485 6.67514 8.89277 ] pdfys
( ) show
(that)
[8.89277 13.3485 13.3485 8.89277 ] pdfys
( ) show
(components)
[13.3485 13.3485 20.0019 13.3485 13.3485 13.3485 13.3485 13.3485 8.89277 12.2296 ] pdfys
n
340.74 528.96 1.14001 -134.7 re
f
338.22 535.62 m
(use to)
[13.3545 12.2357 13.3545 6.64923 8.89887 13.3545 ] pdfys
366.959 86.7594 m
(i.ensure interoperability)
[6.68124 32.3415 13.3545 13.3545 12.2357 13.3545 8.89887 13.3545 6.64923 6.68124 13.3545 
8.89887 13.3545 8.89887 13.3545 13.3545 13.3545 8.89887 13.3545 13.3545 6.68124 6.68124 
6.68124 8.89887 12.2357 ] pdfys
395.698 86.7594 m
(ii.abstract common services)
[6.68124 6.59932 25.7402 13.3545 13.3545 12.2357 8.89887 8.89887 13.3545 13.3545 8.89887 
6.64923 13.3545 13.3545 20.008 20.008 13.3545 13.3545 6.64923 12.2357 13.3545 8.89887 
12.2357 6.68124 13.3545 13.3545 12.2357 ] pdfys
n
229.98 399.36 55.98 -185.16 re
1 1 1 sc
f
1 J
0.75 w
8 M
n
229.98 214.26 56.04 185.1 re
0.0039978 0.0039978 0.0039978 sc
S
n
346.62 737.7 47.46 -313.08 re
1 1 1 sc
f
n
346.62 424.62 47.52 313.14 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
378.54 449.28 m
/N11 [0 16.02 -16.02 0 0 0] Tf
(Component:)
[12.4829 10.6805 15.9753 10.6405 10.6405 10.6405 10.6405 10.6405 7.1416 5.28981 ] pdfys
378.54 559.44 m
/N15 [0 16.02 -16.02 0 0 0] Tf
(run\(\), checkpoint\(\))
[7.14158 10.6196 10.6581 6.20452 6.20452 5.30741 5.33943 10.6581 10.6581 10.6581 10.6581 
10.6581 10.6581 10.6581 5.30741 10.6581 7.14158 6.23817 6.20452 ] pdfys
n
394.08 567.24 65.52 -142.62 re
1 1 1 sc
f
n
394.14 424.62 65.46 142.62 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
412.98 432.24 m
/N11 [0 16.02 -16.02 0 0 0] Tf
(Field:)
[10.6757 5.32501 10.6757 5.32501 10.6757 5.32501 ] pdfys
412.98 485.639 m
/N15 [0 16.02 -16.02 0 0 0] Tf
(halo\(\),)
[10.6772 10.6772 5.32648 10.6772 6.22359 6.22359 5.32648 ] pdfys
432.239 432.24 m
(impo) show
(rt)
[7.11435 7.11435 ] pdfys
(\(\),) show
451.498 432.24 m
(export\(\) )
[10.6596 10.6596 10.6596 10.6596 7.14144 7.08217 6.20599 6.20599 5.30888 ] pdfys
451.498 506.88 m
/N11 [0 16.02 -16.02 0 0 0] Tf
(+ I/O)
[10.6244 5.33136 6.28299 4.50489 13.3959 ] pdfys
n
393.84 737.7 65.76 -170.46 re
1 1 1 sc
f
n
393.9 567.24 65.7 170.52 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
412.86 574.86 m
(G) show
(r)
[7.11435 ] pdfys
(id) show
(: )
[5.40033 5.33625 ] pdfys
412.86 622.081 m
/N15 [0 16.02 -16.02 0 0 0] Tf
(r) show
(eg)
[10.6803 10.6803 ] pdfys
(r) show
(id\(\),)
[5.32965 10.6803 6.22677 6.22677 5.32965 ] pdfys
432.119 574.86 m
(transpose\(\) + )
[7.1415 7.1415 10.6532 10.6532 9.75608 10.6532 10.6532 9.75608 10.6532 6.19964 6.19964 
5.33943 10.6179 5.33943 ] pdfys
451.378 574.86 m
/N11 [0 16.02 -16.02 0 0 0] Tf
(Metrics)
[15.1388 10.7014 7.12877 7.12877 5.28019 10.6196 9.80423 ] pdfys
n
459.6 737.7 27.24 -313.08 re
1 1 1 sc
f
n
459.6 424.62 27.3 313.14 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
478.62 447.06 m
(Layout, PEList, Machine Model)
[10.6613 10.6613 9.76415 10.6613 10.6613 7.08869 5.31059 5.33136 11.5422 11.5422 10.6613 
5.31059 9.76415 7.14155 5.31059 5.33136 15.0987 10.6613 10.6613 10.6613 5.31059 10.6613 
10.6613 5.33136 15.0987 10.6613 10.6613 10.6613 5.31059 ] pdfys
n
181.5 68.22 36.72 630.78 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
208.02 230.34 m
/N11 [0 24 -24 0 0 0] Tf
(A) show
(pplica)
[16.0005 16.0005 7.9845 7.9845 16.0005 16.0005 ] pdfys
(t) show
(ion )
[7.9845 16.0005 16.0005 7.96765 ] pdfys
(C) show
(omponen)
[16.0005 23.9927 16.0005 16.0005 16.0005 16.0005 16.0005 ] pdfys
(t) show
n
211.02 536.88 1.38 -149.28 re
f
n
221.58 387.36 51.24 -185.16 re
1 1 1 sc
f
n
221.64 202.26 51.24 185.1 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
242.52 256.32 m
/N11 [0 18 -18 0 0 0] Tf
(G)
[14.9903 ] pdfys
(r) show
(i)
[5.9903 ] pdfys
(dded) show
264.12 233.339 m
(Components)
[13.9969 11.9987 17.9929 11.9987 11.9987 11.9987 11.9987 11.9987 7.98459 10.9907 ] pdfys
n
266.4 356.28 1.01999 -122.94 re
f
n
229.98 601.62 55.98 -185.16 re
1 1 1 sc
f
n
229.98 416.52 56.04 185.1 re
0.0039978 0.0039978 0.0039978 sc
S
n
221.58 589.62 51.24 -185.16 re
1 1 1 sc
f
n
221.64 404.52 51.24 185.1 re
0.0039978 0.0039978 0.0039978 sc
S
0.910004 0.173004 0 sc
242.52 459.06 m
(Coupler)
[13.9969 11.9987 11.9987 11.9987 5.98672 11.9987 7.98459 ] pdfys
264.12 435.601 m
(Components)
[13.9969 11.9987 17.9929 11.9987 11.9987 11.9987 11.9987 11.9987 7.98459 10.9907 ] pdfys
n
266.4 558.54 1.01999 -122.94 re
f
0 0.800003 0.604004 sc
172.62 49.26 m
/N11 [0 19.98 -19.98 0 0 0] Tf
(1. ESMF provides an environ)
[13.3485 6.67514 6.6791 14.4472 14.4472 18.8828 13.3485 6.6791 13.3485 8.89277 13.3485 
12.2296 6.67514 13.3485 13.3485 12.2296 6.6791 13.3485 13.3485 6.6791 13.3485 13.3485 
12.2296 6.67514 8.89277 13.3485 13.3485 ] pdfys
172.62 358.44 m
(ment for assembling components)
[20.008 13.3545 13.3545 8.89887 6.64923 7.80011 13.3545 8.89887 6.64923 13.3545 12.2357 
12.2357 13.3545 20.008 13.3545 6.68124 6.68124 13.3545 13.3545 6.64923 13.3545 13.3545 
20.008 13.3545 13.3545 13.3545 13.3545 13.3545 8.89887 12.2357 ] pdfys
n
175.14 723.3 1.14 -134.7 re
f
172.62 723.3 m
(.) show
q
n
36 756 540 -720 re
eoclip
n
3 w
n
150.24 47.1 145.98 698.4 re
301.5 47.1 192.24 698.4 re
500.22 47.1 59.76 698.4 re
0.0039978 0.0039978 0.0039978 sc
S
Q
522.6 54.36 m
(3. Gridded components,)
[13.3485 6.67514 6.64923 16.6651 8.89277 6.59922 13.3485 13.3485 13.3485 13.3485 6.64923 
13.3485 13.3485 20.0019 13.3485 13.3485 13.3485 13.3485 13.3485 8.89277 12.2296 6.67514 
] pdfys
n
525.12 314.58 1.14001 -141.36 re
f
522.6 321.24 m
(coupler components )
[13.3646 13.3646 13.3646 13.3646 6.6913 13.3646 8.90893 6.64923 13.3646 13.3646 20.0181 
13.3646 13.3646 13.3646 13.3646 13.3646 8.90893 12.2457 6.64923 ] pdfys
n
525.12 551.64 1.14001 -141.36 re
f
522.6 551.64 m
(and application)
[13.3506 13.3506 13.3506 6.64923 13.3506 13.3506 13.3506 6.67727 6.67727 13.3506 13.3506 
8.8949 6.67727 13.3506 13.3506 ] pdfys
546.6 54.3599 m
(components)
[13.3704 13.3704 20.0239 13.3704 13.3704 13.3704 13.3704 13.3704 8.91472 12.2515 ] pdfys
n
549.12 189.06 1.14001 -134.7 re
f
546.6 195.72 m
(are)
[13.3405 8.88484 13.3405 ] pdfys
0 J
0.119995 w
10 M
0.753006 0.753006 0.753006 sc
547.379 238.741 m
(u) show
n
547.379 238.741 m
(u) pdf_strokepath
547.379 252.093 m
(s) show
n
547.379 252.093 m
(s) pdf_strokepath
547.379 264.327 m
(e) show
n
547.379 264.327 m
(e) pdf_strokepath
547.379 277.679 m
(r) show
n
547.379 277.679 m
(r) pdf_strokepath
547.379 286.576 m
( ) show
n
547.379 286.576 m
( ) pdf_strokepath
547.379 293.225 m
(w) show
n
547.379 293.225 m
(w) pdf_strokepath
547.379 312.112 m
(r) show
n
547.379 312.112 m
(r) pdf_strokepath
547.379 321.009 m
(i) show
n
547.379 321.009 m
(i) pdf_strokepath
547.379 327.688 m
(t) show
n
547.379 327.688 m
(t) pdf_strokepath
547.379 336.511 m
(t) show
n
547.379 336.511 m
(t) pdf_strokepath
547.379 345.407 m
(e) show
n
547.379 345.407 m
(e) pdf_strokepath
547.379 358.76 m
(n) show
n
547.379 358.76 m
(n) pdf_strokepath
0 0.800003 0.604004 sc
546.6 237.962 m
(u) show
n
546.6 237.962 m
(u) pdf_strokepath
546.6 251.314 m
(s) show
n
546.6 251.314 m
(s) pdf_strokepath
546.6 263.548 m
(e) show
n
546.6 263.548 m
(e) pdf_strokepath
546.6 276.9 m
(r) show
n
546.6 276.9 m
(r) pdf_strokepath
546.6 285.797 m
( ) show
n
546.6 285.797 m
( ) pdf_strokepath
546.6 292.446 m
(w) show
n
546.6 292.446 m
(w) pdf_strokepath
546.6 311.333 m
(r) show
n
546.6 311.333 m
(r) pdf_strokepath
546.6 320.229 m
(i) show
n
546.6 320.229 m
(i) pdf_strokepath
546.6 326.909 m
(t) show
n
546.6 326.909 m
(t) pdf_strokepath
546.6 335.731 m
(t) show
n
546.6 335.731 m
(t) pdf_strokepath
546.6 344.628 m
(e) show
n
546.6 344.628 m
(e) pdf_strokepath
546.6 357.98 m
(n) show
n
546.6 357.98 m
(n) pdf_strokepath
546.6 371.342 m
(.) show
/GEKHJD+Arial-BlackItalic /Font _pdfUndefineResource
/N15 /Font _pdfUndefineResource
/GEKHHN+Arial-Black /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
