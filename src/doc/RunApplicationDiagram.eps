%!PS-Adobe-3.0 EPSF-3.0
%%Title: (RunApplicationDiagram.pdf)
%%Version: 1 3
%%CreationDate: (D:20030128130438-05'00')
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 612 792
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
0 0 moveto 612 0 lineto 612 792 lineto 0 792 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 10
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 13
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N23/Helvetica 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 rectclip
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font IJJIDJ+Courier
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/BaseFontName (Courier) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /IJJIDJ+Courier def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -6 -249 639 803 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81C6325A8F1E39454C5C5CD7DD32FFDCAA0C98A471D
864F21BA3C1B9AB1A487DF489FCED13A759AC6D527220B09E5C662269D43162B
1C47D4A5CBFB0633655E0B882B6CB0B8386CBC5142ED5E3581051D6952C2D60E
CC016F88AA5C2C88A02AD3E7621E87AFA4B88E9149CBFC744342E35BF29B4E2D
48E22FB32FF8C291AD356D95FF4148A188FEC8A42F8DDE387E8A9DB7A4D0E6A8
880F56526E57A33C917D9D938DFF45CD3E772A89A6BB67336931F47ED8F7F0BC
84650A5C0F1CD395BB6EAA8CBDD17AF5B8F4911CE65F1FE042212F94552A7547
9575D298384BF67EC57A79CD3962552144AFD78C1F864D9B3245B800FBE25098
B2CBB952B8E3F8049D76E895088110B1D23610B355F75360E462E29B835BE644
9E767D337C558BE8095A041CECFBDF99295F07F4EFAC3A3C73E12CA2BE4F8144
FA1D9E348A855DC74AE991B59014B2150B572A36903450C5EE110CFD2A76BAF2
5CD5A8F8CC6A71EB0A8C598133E82613EC6E6B8B8D36F6C1D4C177643C416925
F0E60C8C87D0DCEF29DC35EA8E8D91E0C3EB7A2675653E6F87FDA008BFEB0943
5E9E03D6CB78518F0648157BF92D7CF09A440EF6D0B7704BB8F309CB4BFA81AF
5A20B16241983049145943713826390FB9EEAB91918D113C41897D570CBBA044
4A3963C15B881DBEDD8DB9B6BA6EDAF4DD6FE32AAB0914ABAC932458051ED7AE
49A2E29797AED7F55D247DFF55A5BEB78B0BE8F5EDBF584350214780D773062D
18431F8E721FE4ABE0D0E50AE836A58FC3357D5FA79692833AEBC3470BE169C3
66D068C81ABE0B9DFD9926DE103175BFCCE2DD7460EF7549ED1C162B6B012E65
8DFE020B130706CF1A854449CC95FD36D46ED716486C8FCBF0F270980963948F
BA78E5CE2DD39BD2C3BE77AF9978423A19907D11DDD2B134DD3046B9351AC19D
891CBD6CB99B551688E63B1A47B7BA75467E80E9743C51EF84BA8FF89350CB50
730E7081CA95731A347ED9545F735593B36379EBD8E1F11609F1D2DA943F077F
886940DE18174CA19415A54704A15D9EA5110837460077E7AD1C7DB429395C6A
0427978044286FCE8F82123E76207D8B7604D973DB0FE9C5DBED30AC45251AD1
1ABF3DB99338AF5AF7DC66766650243037824CDFB93541007415AEC0F813914B
AA3D2A6F449B8B04307A6EE386994C033C47DE65CE86ECB095ACF06C928961FB
C9A24D3B2851C49CB61F495BF0DB5D9653BDE1E809022D683C72032A523CDBE1
86CC3E6E6B827503F9A71F71CDA3E31F29485DA1B2BA43E814B2F64B41A82326
D7890215813716301C0CE6A08C84FF50D4504029794439D2A32A5E3635AB1B86
B8875FF41E015D4B3C4DDBEE6A8FF0BEE572BD69DB5382A4E7B60DC1EC199CF9
24963E63539CB0F2900D59A6DD2B089FDCFEFE69FB6C7B4E223E2577CD1E3CF9
A6227126E3C16D596CAA9DDE66AF2535F89A78FFE006098492B3C5C674DC8A8B
3B928B94973493EAB255E96C3B58E71D94D045A86EB9C7BAA7F5B6CECCD0E45B
36E8267427A0934EF24875AC8AA7CDF9A4D2917D04CB16C2DEA0D9487AFDC4F6
FB345E724739924FDB07DF4EE17AF23E8C4608D38BE83139B24605636C640BE9
B6AF60D5895612CD7D99B9BDEB9DE53DA79B615AE5B24F1845EE2417615E900B
3562BEBE6ABCE1F0881ED95F088A0F0CC4CC2643FDBE64F54B35668D199C28CC
19CCBCDFBF4AE855C92B58FBA50B9F41458144130E75E2CE259E025BA61BCF94
4591F39E1DCA568615B608D41582D1574E538C4F1654F896625BED5F9A6109D6
987AE1AC21D67325246C5BEFA3E504A888E215E8879189BE6D68210699487F5D
48F9671E6DBF33F553AA42D50945EC1A6852ABAC4F7CD2B1683FAC749E14C937
01B4B85F740468AF901A14EAC0D20A0C69805ABF9EE2828B9B33D9D02CC3AE8C
077C1CD29F312B1842A20380819A7D3EB48051AF2AF982F54D9EB7E78C7BC992
F2E8E5B19C5DA8060D2CA9A04EA358CA96D06539099530C5C0B5B50DDD738F32
5C28981C5B487E2FF6830E6CE633D017B830992EA32183E2CE6FBE3C8A6264EF
FA0EB85771072153DA0249E41C24EC98D0F12BC9DBE30BA88FFAAA09B8BA39D6
E8D61CE478E61C65C99E735CAB4B7415153105C2E0C78537FD10CA1543D07508
C4FE98DB4E24C9A06A3A6DC294FDAA613D834678A51A34D5EB54A9F7360F7572
D2814035F88DAC3C7B562D4C952E0095725A2AD49384594EBA492E0220A3FA9A
5B14EAF9CD10CC87FDA1FB984BDE728009D9C57D877F77535F732E9D3933E42D
37C99AFD433B69DDC17239AC36957927D982004567732F505E74B6ECE1055460
66A5A5A5A174D60504D74905F0C380F6DF009CBB393181D195DE50020841DF20
64811354D2A052D5396E52A5AED3C192991A4F754AAA99D5359F2720A33066B2
82BE725D0E7020BECA14B45A0AF363A3EBB7EC63D94F27AACD892072F17A5A8F
F1DFB452B3D63FA01661A5F9F4E8552F6C89E3ADCC6779376BAE19B7418BF2CF
83254FE5A0A245358326CEE66121CC77D85D7B473E9B76945E9CC3A8E41BD3D9
1A0D4E1988FDBAC3E9A7F4987560C5E531AD7C8C8540DDB9A3B2BBD76341656C
B652B331C72699630066EB9DC818C6233FD292B8115AEBA2C64EBB43FF35A3A9
F6C778947B7ECC8F127DB12C4EC762AFEE4E7B009B2F9135E41BE7D03F6EE7D9
F5F18E0E54A6E16C66FF34B01A8AE3C21E90BAA15DC954F48904D0607AA32324
F9FADFBF26CEA64720E8028FAE997AB8987923C7BACAC75F9E69CBCB06D7E628
71D5AF8BC73C39B9DD4D149BBCA483A17A3082197BBE65ED48A27B5E6CD70FBE
2BFB22747F4DB278E59C29945D48F64BBF01A34961DDEF8251231CFC567F54D7
BABCDB15D0E3BA52C873B6BD24D869B075BC715CFB2BDD560A50ACD41B12F8B6
127A74A6D43D5F741757DECDFBF1F9A76CFAACC44235917A1B3EB1C7FBD253A8
95EC78CDFF3A2B5505401F342C458F602B6D3EF96131505BC7A1032E98548E77
2FB4CC5E5AC7A731F5253CD2A428729D8866365399C7132C3FBCB794A23BD483
BF7F65110E8376A52BD0215F137A9CC0723505E715D2F27300C4D1889685DA84
934040A6A1D7868730C01690329424E5AFADEEC73040F448947ADFB010D01023
B5443D40FED8BC03C767396AB73FF200A48F183D4E98CE55661C9CA630479769
721EB4C6B07DBB36D4EE425BFDAF92AA698018174855A22963EE22A59FAC25D9
308D29870E6D3F8A7EA535126A04079C2D03DBA3ADB844F29DB668F1B7D9F197
4431B92F19342B675409747838DD99E9773452628CD703159F2E1635E2BEE82E
89FB12B2C7E566C47BB55D8D8593D44051552C7258C7FD8D2BE7045216F5BCDC
762577D9ADC2D1A5B329F49B116EEDA289283536A3962FA19354FE46F6833AF1
52C281637D131237F01075BEFBEFF59A27B48365F2C552FA1437696CF12075A7
0DF988CAC6613D53753330079DB084DFABA8253C25D7C4F6432FF233E9698CF5
A87AF32767396A20B9177C8B56F7DBC7F8232EA7A1A3E9D04EEB87163CC60AB6
D8CD9BF39B26B6DEFD39BADE255A5F946929797CCFC9A4279ABC2C9D368C6A8E
3A17D574B320BAF54D5924EF16CA4D0635EC11E20A82965A0ABD59E92D52BBE6
58BA07B4398069794D0B6D0FA10987500F6A444BF7EA5510B47A02D283424618
47CBF1553310162C9308C6E39590DF911B16EA286DC388899A83590FC6D7EEB3
174D02B81C42333F597F6AE42D7654633347562AE830170E5F06499FED1247E0
2E5D4F94009E2BB1226A8EBF8BF1800E0E3F578A898235A5AFFE5E98775035AE
8F68D997B8BF5EBDF95A3DCA68F8A32F3C53D33D3872327E750EC037E22F2F87
1DF7540F006418EFADE3A2ECFB277117F5A68FFC9187D74A736EF274817E9E7E
2572E3D41B91245E1BF3AB88458D85C93D21CAD68347B22F74A98C3C5CBED663
EF8B5CD7067C41EA1B32CAD9EB0F3A765C388BD6098832A7AC9CA5444648A7D5
C1658D81DF82909F95093964505735399EC45F86D69BC6B919AACA4BAA418DD1
EE9F0CAA75534D6414AF8F8E9B660E76E7CF54570C7E3C8E236A28774699C083
201922499CC400606274FA84836EE3BA512DF9D278A51AE364F33CE663CF33BC
F7BC856513BD8B4139CB9E23AEE934D49B06AEF450779CFCDDAFDCBA71875AA7
E995F1C1D9AD06673B1150C5B8EA91622D44323990641F0052DC2BEF97F58895
4CC193790ED29B450B965C4245ACB5A0B53FD9BD95E4B8F9A076462F8053975E
BE43730C9C7A4207FC41FB55C1A2448A5DB6B04A89DC02AFAAFBA707323CC26C
636DAE7CFD88AAA3D32C680FA1DE35186DA720466FCCF350A809BC2838503B25
16F46B23DF6733180EB5FCE031AE101C2BDF2B10096406159FEDB2CE1198F311
F69E129DDDC4E4ACC8B03790E31057C34D807A9739E6E7EF9627D9F8C69508D6
E796750AE48604AB2071809B66A7B5F2F4A8112173B0EAA90E8044EBF3654AB4
667452413A9AF3A3C979C7877B31A25207051D3D5D34EC5EC5B892CFD38B00B8
24A04A21C9D824BB73EF97361ED47C5C2BD0340A912ED0319BFFCC2B8DE0B911
BDDB76C1EE1CC142DADD15340601887545332BA7CDA97553092EEB87167FF3C8
B6DB83C50258D673DEA001CB52C8DECE277093B6D55CE985D5B8DD7C628E63FE
C6DA01BBFBF993ABD4A4B83076478DD305A937FFC44E48C9CC0C0BEC31D16D6B
312A95AF7D7690CEE1BF681EAB6C8ED2FEFC8E95F25F1F1EA5859DFBF7AAA06E
0C9A4F13831296DF7036C9F79B11A28677269396D18973BD80E413D220772D83
508C3F7AB91DBE038B76EAE9A74530CF7D43A032D9168F3D78573672D323E35B
444C11F014691F2AE90AB623F63FDF936ED6CEB91C3CB21BB04E70337B98E760
CC4A0CEA3930E1C68CCD549928D56EB8C3C72248BD976CD9B49F66AE8CA52F48
4B47C0A5A8D94D624F16C24ED34DDADE14B45F38472D8E6EA3B8B8F054DD3E1C
933E0E3F5DEF8B8B2262897CA4812804365A9AFF8EAB538C6DBC60B3599018F7
E99F257027F5A755041EE43DE5A08D617866C856740A315B80FE56EFFA3E2280
F6FDC6AA71469F4B21049E3B3FE18EC53B283B896D4FF9FB240AA9586698AC83
935DB97F2A94D12D5E24C37CD326AD5A540F6FD7BA45A63EEA35DF51EA1392D0
ED55221B66AACC6ED5705395CF7D62DCE603097AFD08F7E020F150D28A260059
4AB98B20529A7BB6626E4DF4099AC272A94C8F67BF88B3F24F41BDF5023DD964
4F49146E25FBCDACFD4B850181A1F9C63BF50C03170795A0D90EA4AC62ECB9DB
01DAD54C1E98F56F7CB6EDDD5DC372D5097A005EB906F21301BCE0B3ACD0EC9D
EC37F9ED52285C2B1B165DD3BC33D9AF21F5CF77790CDBD0D7B5D9DE642F3290
147CBA284E1BA5C6CEA7688AA33FD778CD3C8BE0E9B018F0185B9D1982B82ADA
0399409584A341BD7260766980CC69083E8F9A5460ACF0C2957C2F26F36285D1
CBFA31CA91E34C4F7253ADED9EB790D8B10E9EAA5934514664418C8F98B781A8
72984FCEA5D679F3A1DBE513A1B1871B2C609BAA1E47369E98B555F2AA6B2773
02A9662C6FADD5F2E2AFAF5F9874E175844843F55EA093A42B6C6180BF9836F6
C056B04CF1192E0B0D3D43FC278C79DCCA972C9E7AD3ACB639E04D1E4E6004B3
2632621B7333BB30D1A1179BB45CC58BBA900E50062757FC0E138510EB3D0DFA
BA99FCA9736832374D4B43F863D287AEA9B3851B0752B6AA33ECC358B22F653C
86B04A0F25259D91D30599A3C64D4AD1B4B97C90C72BD92B19C7F1C1533B29E0
5C78B7E90938463A5FF0327C7E432B81A7EB384AD1C16A241F888CE1EDCD22A3
D6EE0B3B353168CC356BBED3ACE641ABBEA3A4AD9410AE319A9E5156ED75F2BA
9B5793D8986E0BAB4D1674649CA682B73D48B90FA6CE72EC2EB1C6EC72B7CFF5
47F0EBBCA7C9E5CBDE9AE55FCB650869A76E189FC61DADC1AAFFFE8570039F70
42D92FE158590ED4EB38DFDB6FAD78E480A65B291902CC6905EEB5291E5EE106
11DC2C947FA87D220585EF5A1FABCC19D7FAA45CCEFDBF6822C47206759D3463
2E137C7B19D75A821D077FD32A2EF7EC6B537FAB5A26DF1242F7E134BC0DF440
1FFE4D70FCC5BFF9FBD6B50C7432CA2196C4C2277D8A6939ECDB31082B30402E
CA85894BA3058A924B567FFD0D28B2BE6712F6219B2DC49ADFF00FF7DE10901E
1CC6F1343C0D533405B3EA98C5E29C0808ABDF5DEF63F5CAB6F6D18FEB4F5D04
987B380B51BCE79AABAE98D2EBE81CF0ADC96ABEC1AAA167B5E1CE75ACBC0989
C7254CFFDC1F0297B6437AAF71C8DF586250E50C78941B75160879C81CD2D700
54C95B347E79D5E77768CDF5A9820BED5B96BE8675CC0ECB538BA3E2E4A5E115
5D7D6522F247448A927AA2E13CC7F7DAF79C10CD8FC82E4DC36FB138F7C43EAB
F35FFDCC4AA162672FB60534E64AEA7D9B6098EC6601E2E5251C23DFCE6C2D7C
16487AA5376DB683B054D36F7CA613596DC5D8A64A518D229C16083052DAD6D9
A121EDEC805FD8CF46CDE8E129BD593344FE73C3DD09DD444E1C3D0567A9494A
8345C1CA76C5FEB452A4D449927FC17558566C6C51F53E6650377108DD509D6C
B39F59861A96B42993FE09618A45160E51DD0BAE37B1F5B218BBC278268D6821
E6C6F92044CCF95F0B4754E26C4C75E2D8671866DB625426A149243503CAF2DA
D0EED0AD937A4C71ABC7E415BF4CF63A0EA7B4DA3059CB207BD59FF7143757BA
D2309ED5BF3372C7AAB1A5A29E5015CCCCB27811D816850C00C652E2442F0B00
EFA014A14F2CAD1EAC1753937F8DF16B8EDB5A1164059C1D44ACC57A9F7C4C2A
E282D3958D0736B8A3BC34987F4480048A80F1587196B76DA90F1F886702A03F
2111F3757A49C4B694C7D0F1919A2D50DBD7F55C218F556455406174C20261E3
7B802CAEA12C2A0D249586579D41555127B6B4E3699EB7502BFF237107F82800
21B01C7F460D5E4063449698A88BF4C782855DDBF67A41CC4299007C8F9F9278
B3C88847042543FFFB5148619F01AB1318D63B0C95F023CDA19E4BC8615D8159
37CB8D429EFB40FD5F9284076F0F658D9C8E2172A44496C2920071FCB2752587
D0CA02FAF02F2BC0F3A6F93477FD2531AFD582C8BC5FBCAEAA453CA002A082C1
850F1C2E707BA29A5EC9592690AF12D2687F72E7067A6706E22BE7E745DCD937
CF4FE3EA1153C1D0152BF11E41F1106E3CE40703478D4C9826E36FB8C8E18E1C
164A6009D997169EED1303A8E6BCDFCFFC890190BAC30324788674F6FCA41E2E
AF59223E526F7E0BB49A147C3875E4E07FACED5BBF588DB414247E1D6573FDC3
517CB3A32168940FF847F5AEEB9C6A7440795CE0FB31193936E86073483B01E9
524794B5E6F84E3AACCCE6D1F5135D3B70EB0DD959A0B5190FBF27432E963FB6
143DB7AE31CB6759B43C6AF37EDE4F4ED283EA862821F39819114BA3CA68AFF1
70849D7E5CA2A793E979745758FC3D82ED96F0296B3A90C466C5F2F66A4C15E3
E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/IJJIDJ+Courier findfont /Encoding get
dup 0 /.notdef put
pop
end
/IJJIDJ+Courier findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 44 /comma put
dup 46 /period put
dup 65 /A put
dup 73 /I put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 160 /space put
pop
%%EndResource
[/N19/IJJIDJ+Courier 1 TZ
0 0 612 792 re
W
n
q
n
32 792.06 534.571 -275.516 re
W
n
0.429001 w
n
33.716 803.135 76.367 -10.726 re
33.716 803.135 76.367 -10.726 re
33.716 803.135 76.367 -10.726 re
71.9 791.981 m
71.9 789.836 l
71.9 787.69 m
71.9 785.545 l
71.9 783.4 m
71.9 781.255 l
71.9 779.11 m
71.9 776.965 l
71.9 774.82 m
71.9 772.674 l
71.9 770.529 m
71.9 768.384 l
71.9 766.239 m
71.9 764.094 l
71.9 761.949 m
71.9 759.804 l
71.9 757.658 m
71.9 755.513 l
71.9 753.368 m
71.9 751.223 l
71.9 749.078 m
71.9 746.933 l
71.9 744.787 m
71.9 742.642 l
71.9 740.497 m
71.9 738.352 l
71.9 736.207 m
71.9 734.062 l
71.9 731.917 m
71.9 729.771 l
71.9 727.626 m
71.9 725.481 l
71.9 723.336 m
71.9 721.191 l
71.9 719.046 m
71.9 716.901 l
71.9 714.755 m
71.9 712.61 l
71.9 710.465 m
71.9 708.32 l
71.9 706.175 m
71.9 704.03 l
71.9 701.885 m
71.9 699.739 l
71.9 697.594 m
71.9 695.449 l
71.9 693.304 m
71.9 691.159 l
71.9 689.014 m
71.9 686.869 l
71.9 684.723 m
71.9 682.578 l
71.9 680.433 m
71.9 678.288 l
71.9 676.143 m
71.9 673.998 l
71.9 671.852 m
71.9 669.707 l
71.9 667.562 m
71.9 665.417 l
71.9 663.272 m
71.9 661.127 l
71.9 658.982 m
71.9 656.836 l
71.9 654.691 m
71.9 652.546 l
71.9 650.401 m
71.9 648.256 l
71.9 646.111 m
71.9 643.966 l
71.9 641.82 m
71.9 639.675 l
71.9 637.53 m
71.9 635.385 l
71.9 633.24 m
71.9 631.095 l
71.9 628.949 m
71.9 626.804 l
71.9 624.659 m
71.9 622.514 l
71.9 620.369 m
71.9 618.224 l
71.9 616.079 m
71.9 613.933 l
71.9 611.788 m
71.9 609.643 l
71.9 607.498 m
71.9 605.353 l
71.9 603.208 m
71.9 601.063 l
71.9 598.917 m
71.9 596.772 l
71.9 594.627 m
71.9 592.482 l
71.9 590.337 m
71.9 588.192 l
71.9 586.047 m
71.9 583.901 l
71.9 581.756 m
71.9 579.611 l
71.9 577.466 m
71.9 575.321 l
71.9 573.176 m
71.9 571.03 l
71.9 568.885 m
71.9 566.74 l
71.9 564.595 m
71.9 562.45 l
71.9 560.305 m
71.9 558.16 l
71.9 556.014 m
71.9 553.869 l
71.9 551.724 m
71.9 549.579 l
0 0 0 setrgbcolor
S
n
71.9 547.434 m
71.9 545.289 l
71.9 543.144 m
71.9 540.998 l
71.9 538.853 m
71.9 536.708 l
S
Q
n
70.184 776.965 3.86099 -241.973 re
1 1 1 setrgbcolor
f
q
n
32 792.06 534.571 -275.516 re
W
n
0.429001 w
n
70.184 776.965 3.86099 -241.973 re
139.686 803.135 94.387 -10.726 re
139.686 803.135 94.387 -10.726 re
139.686 803.135 94.387 -10.726 re
186.88 791.981 m
186.88 789.836 l
186.88 787.69 m
186.88 785.545 l
186.88 783.4 m
186.88 781.255 l
186.88 779.11 m
186.88 776.965 l
186.88 774.82 m
186.88 772.674 l
186.88 770.529 m
186.88 768.384 l
186.88 766.239 m
186.88 764.094 l
186.88 761.949 m
186.88 759.804 l
186.88 757.658 m
186.88 755.513 l
186.88 753.368 m
186.88 751.223 l
186.88 749.078 m
186.88 746.933 l
186.88 744.787 m
186.88 742.642 l
186.88 740.497 m
186.88 738.352 l
186.88 736.207 m
186.88 734.062 l
186.88 731.917 m
186.88 729.771 l
186.88 727.626 m
186.88 725.481 l
186.88 723.336 m
186.88 721.191 l
186.88 719.046 m
186.88 716.901 l
186.88 714.755 m
186.88 712.61 l
186.88 710.465 m
186.88 708.32 l
186.88 706.175 m
186.88 704.03 l
186.88 701.885 m
186.88 699.739 l
186.88 697.594 m
186.88 695.449 l
186.88 693.304 m
186.88 691.159 l
186.88 689.014 m
186.88 686.869 l
186.88 684.723 m
186.88 682.578 l
186.88 680.433 m
186.88 678.288 l
186.88 676.143 m
186.88 673.998 l
186.88 671.852 m
186.88 669.707 l
186.88 667.562 m
186.88 665.417 l
186.88 663.272 m
186.88 661.127 l
186.88 658.982 m
186.88 656.836 l
186.88 654.691 m
186.88 652.546 l
186.88 650.401 m
186.88 648.256 l
186.88 646.111 m
186.88 643.966 l
186.88 641.82 m
186.88 639.675 l
186.88 637.53 m
186.88 635.385 l
186.88 633.24 m
186.88 631.095 l
186.88 628.949 m
186.88 626.804 l
186.88 624.659 m
186.88 622.514 l
186.88 620.369 m
186.88 618.224 l
186.88 616.079 m
186.88 613.933 l
186.88 611.788 m
186.88 609.643 l
186.88 607.498 m
186.88 605.353 l
186.88 603.208 m
186.88 601.063 l
186.88 598.917 m
186.88 596.772 l
186.88 594.627 m
186.88 592.482 l
186.88 590.337 m
186.88 588.192 l
186.88 586.047 m
186.88 583.901 l
186.88 581.756 m
186.88 579.611 l
186.88 577.466 m
186.88 575.321 l
186.88 573.176 m
186.88 571.03 l
186.88 568.885 m
186.88 566.74 l
186.88 564.595 m
186.88 562.45 l
0 0 0  setrgbcolor
S
n
186.88 560.305 m
186.88 558.16 l
186.88 556.014 m
186.88 553.869 l
186.88 551.724 m
186.88 549.579 l
186.88 547.434 m
186.88 545.289 l
186.88 543.144 m
186.88 540.998 l
186.88 538.853 m
186.88 536.708 l
S
Q
n
185.164 759.804 3.86099 -33.893 re
f
0.429001 w
n
185.164 759.804 3.86099 -33.893 re
0 0 0  setrgbcolor
S
n
185.164 605.353 3.86099 -33.893 re
1 1 1  setrgbcolor
f
q
n
32 792.06 534.571 -275.516 re
W
n
n
185.164 605.353 3.86099 -33.893 re
251.663 803.135 84.09 -10.726 re
251.663 803.135 84.09 -10.726 re
251.663 803.135 84.09 -10.726 re
293.708 791.981 m
293.708 789.836 l
293.708 787.69 m
293.708 785.545 l
293.708 783.4 m
293.708 781.255 l
293.708 779.11 m
293.708 776.965 l
293.708 774.82 m
293.708 772.674 l
293.708 770.529 m
293.708 768.384 l
293.708 766.239 m
293.708 764.094 l
293.708 761.949 m
293.708 759.804 l
293.708 757.658 m
293.708 755.513 l
293.708 753.368 m
293.708 751.223 l
293.708 749.078 m
293.708 746.933 l
293.708 744.787 m
293.708 742.642 l
293.708 740.497 m
293.708 738.352 l
293.708 736.207 m
293.708 734.062 l
293.708 731.917 m
293.708 729.771 l
293.708 727.626 m
293.708 725.481 l
293.708 723.336 m
293.708 721.191 l
293.708 719.046 m
293.708 716.901 l
293.708 714.755 m
293.708 712.61 l
293.708 710.465 m
293.708 708.32 l
293.708 706.175 m
293.708 704.03 l
293.708 701.885 m
293.708 699.739 l
293.708 697.594 m
293.708 695.449 l
293.708 693.304 m
293.708 691.159 l
293.708 689.014 m
293.708 686.869 l
293.708 684.723 m
293.708 682.578 l
293.708 680.433 m
293.708 678.288 l
293.708 676.143 m
293.708 673.998 l
293.708 671.852 m
293.708 669.707 l
293.708 667.562 m
293.708 665.417 l
293.708 663.272 m
293.708 661.127 l
293.708 658.982 m
293.708 656.836 l
293.708 654.691 m
293.708 652.546 l
293.708 650.401 m
293.708 648.256 l
293.708 646.111 m
293.708 643.966 l
293.708 641.82 m
293.708 639.675 l
293.708 637.53 m
293.708 635.385 l
293.708 633.24 m
293.708 631.095 l
293.708 628.949 m
293.708 626.804 l
293.708 624.659 m
293.708 622.514 l
293.708 620.369 m
293.708 618.224 l
293.708 616.079 m
293.708 613.933 l
293.708 611.788 m
293.708 609.643 l
293.708 607.498 m
293.708 605.353 l
293.708 603.208 m
293.708 601.063 l
293.708 598.917 m
293.708 596.772 l
293.708 594.627 m
293.708 592.482 l
293.708 590.337 m
293.708 588.192 l
293.708 586.047 m
293.708 583.901 l
293.708 581.756 m
293.708 579.611 l
293.708 577.466 m
293.708 575.321 l
293.708 573.176 m
293.708 571.03 l
293.708 568.885 m
293.708 566.74 l
293.708 564.595 m
293.708 562.45 l
0 0 0  setrgbcolor
S
n
293.708 560.305 m
293.708 558.16 l
293.708 556.014 m
293.708 553.869 l
293.708 551.724 m
293.708 549.579 l
293.708 547.434 m
293.708 545.289 l
293.708 543.144 m
293.708 540.998 l
293.708 538.853 m
293.708 536.708 l
S
Q
n
291.992 742.642 3.86099 -33.893 re
f
n
291.992 742.642 3.86099 -33.893 re
0 0 0  setrgbcolor
S
n
291.992 588.192 3.86099 -33.893 re
1 1 1  setrgbcolor
f
q
n
32 792.06 534.571 -275.516 re
W
n
n
291.992 588.192 3.86099 -33.893 re
353.343 803.135 96.961 -10.726 re
353.343 803.135 96.961 -10.726 re
353.343 803.135 96.961 -10.726 re
401.824 791.981 m
401.824 789.836 l
401.824 787.69 m
401.824 785.545 l
401.824 783.4 m
401.824 781.255 l
401.824 779.11 m
401.824 776.965 l
401.824 774.82 m
401.824 772.674 l
401.824 770.529 m
401.824 768.384 l
401.824 766.239 m
401.824 764.094 l
401.824 761.949 m
401.824 759.804 l
401.824 757.658 m
401.824 755.513 l
401.824 753.368 m
401.824 751.223 l
401.824 749.078 m
401.824 746.933 l
401.824 744.787 m
401.824 742.642 l
401.824 740.497 m
401.824 738.352 l
401.824 736.207 m
401.824 734.062 l
401.824 731.917 m
401.824 729.771 l
401.824 727.626 m
401.824 725.481 l
401.824 723.336 m
401.824 721.191 l
401.824 719.046 m
401.824 716.901 l
401.824 714.755 m
401.824 712.61 l
401.824 710.465 m
401.824 708.32 l
401.824 706.175 m
401.824 704.03 l
401.824 701.885 m
401.824 699.739 l
401.824 697.594 m
401.824 695.449 l
401.824 693.304 m
401.824 691.159 l
401.824 689.014 m
401.824 686.869 l
401.824 684.723 m
401.824 682.578 l
401.824 680.433 m
401.824 678.288 l
401.824 676.143 m
401.824 673.998 l
401.824 671.852 m
401.824 669.707 l
401.824 667.562 m
401.824 665.417 l
401.824 663.272 m
401.824 661.127 l
401.824 658.982 m
401.824 656.836 l
401.824 654.691 m
401.824 652.546 l
401.824 650.401 m
401.824 648.256 l
401.824 646.111 m
401.824 643.966 l
401.824 641.82 m
401.824 639.675 l
401.824 637.53 m
401.824 635.385 l
401.824 633.24 m
401.824 631.095 l
401.824 628.949 m
401.824 626.804 l
401.824 624.659 m
401.824 622.514 l
401.824 620.369 m
401.824 618.224 l
401.824 616.079 m
401.824 613.933 l
401.824 611.788 m
401.824 609.643 l
401.824 607.498 m
401.824 605.353 l
401.824 603.208 m
401.824 601.063 l
401.824 598.917 m
401.824 596.772 l
401.824 594.627 m
401.824 592.482 l
401.824 590.337 m
401.824 588.192 l
401.824 586.047 m
401.824 583.901 l
401.824 581.756 m
401.824 579.611 l
401.824 577.466 m
401.824 575.321 l
401.824 573.176 m
401.824 571.03 l
401.824 568.885 m
401.824 566.74 l
401.824 564.595 m
401.824 562.45 l
0 0 0  setrgbcolor
S
n
401.824 560.305 m
401.824 558.16 l
401.824 556.014 m
401.824 553.869 l
401.824 551.724 m
401.824 549.579 l
401.824 547.434 m
401.824 545.289 l
401.824 543.144 m
401.824 540.998 l
401.824 538.853 m
401.824 536.708 l
S
Q
n
400.107 691.159 3.86099 -33.893 re
f
q
n
32 792.06 534.571 -275.516 re
W
n
n
400.107 691.159 3.86099 -33.893 re
467.894 803.135 96.961 -10.726 re
467.894 803.135 96.961 -10.726 re
467.894 803.135 96.961 -10.726 re
516.375 791.981 m
516.375 789.836 l
516.375 787.69 m
516.375 785.545 l
516.375 783.4 m
516.375 781.255 l
516.375 779.11 m
516.375 776.965 l
516.375 774.82 m
516.375 772.674 l
516.375 770.529 m
516.375 768.384 l
516.375 766.239 m
516.375 764.094 l
516.375 761.949 m
516.375 759.804 l
516.375 757.658 m
516.375 755.513 l
516.375 753.368 m
516.375 751.223 l
516.375 749.078 m
516.375 746.933 l
516.375 744.787 m
516.375 742.642 l
516.375 740.497 m
516.375 738.352 l
516.375 736.207 m
516.375 734.062 l
516.375 731.917 m
516.375 729.771 l
516.375 727.626 m
516.375 725.481 l
516.375 723.336 m
516.375 721.191 l
516.375 719.046 m
516.375 716.901 l
516.375 714.755 m
516.375 712.61 l
516.375 710.465 m
516.375 708.32 l
516.375 706.175 m
516.375 704.03 l
516.375 701.885 m
516.375 699.739 l
516.375 697.594 m
516.375 695.449 l
516.375 693.304 m
516.375 691.159 l
516.375 689.014 m
516.375 686.869 l
516.375 684.723 m
516.375 682.578 l
516.375 680.433 m
516.375 678.288 l
516.375 676.143 m
516.375 673.998 l
516.375 671.852 m
516.375 669.707 l
516.375 667.562 m
516.375 665.417 l
516.375 663.272 m
516.375 661.127 l
516.375 658.982 m
516.375 656.836 l
516.375 654.691 m
516.375 652.546 l
516.375 650.401 m
516.375 648.256 l
516.375 646.111 m
516.375 643.966 l
516.375 641.82 m
516.375 639.675 l
516.375 637.53 m
516.375 635.385 l
516.375 633.24 m
516.375 631.095 l
516.375 628.949 m
516.375 626.804 l
516.375 624.659 m
516.375 622.514 l
516.375 620.369 m
516.375 618.224 l
516.375 616.079 m
516.375 613.933 l
516.375 611.788 m
516.375 609.643 l
516.375 607.498 m
516.375 605.353 l
516.375 603.208 m
516.375 601.063 l
516.375 598.917 m
516.375 596.772 l
516.375 594.627 m
516.375 592.482 l
516.375 590.337 m
516.375 588.192 l
516.375 586.047 m
516.375 583.901 l
516.375 581.756 m
516.375 579.611 l
516.375 577.466 m
516.375 575.321 l
516.375 573.176 m
516.375 571.03 l
516.375 568.885 m
516.375 566.74 l
516.375 564.595 m
516.375 562.45 l
0 0 0  setrgbcolor
S
n
516.375 560.305 m
516.375 558.16 l
516.375 556.014 m
516.375 553.869 l
516.375 551.724 m
516.375 549.579 l
516.375 547.434 m
516.375 545.289 l
516.375 543.144 m
516.375 540.998 l
516.375 538.853 m
516.375 536.708 l
S
Q
n
514.658 673.998 3.86102 -33.893 re
f
n
514.658 673.998 3.86102 -33.893 re
0 0 0  setrgbcolor
S
n
63.319 541.427 91.383 -7.72302 re
1 1 1  setrgbcolor
eofill
n
63.319 541.427 91.383 -7.72302 re
0 0 0  setrgbcolor
S
0 0 1  setrgbcolor
63.7482 534.992 m
/N19 4.2903 Tf
(If not complete then loop back to start of run method) show
n
116.519 781.684 101.68 -7.72302 re
1 1 1  setrgbcolor
f
n
116.519 781.684 101.68 -7.72302 re
0 0 0  setrgbcolor
S
0 0 1  setrgbcolor
116.948 775.249 m
(The application run method may loop for several iterations) show
n
216.054 769.671 122.702 -19.735 re
1 1 1  setrgbcolor
f
n
216.054 769.671 122.702 -19.735 re
0 0 0  setrgbcolor
S
0 0 1  setrgbcolor
216.483 763.236 m
(The run methods of the atmosphere and ocean components are done in ) show
219.057 757.229 m
(parallel but may use a different number of iterations, timesteps, etc. ) show
232.786 751.223 m
(See the component run diagram for additional detail) show
n
288.131 702.743 148.015 -7.72302 re
1 1 1  setrgbcolor
f
n
288.131 702.743 148.015 -7.72302 re
0 0 0  setrgbcolor
S
0 0 1  setrgbcolor
288.56 696.307 m
(The couplers are only started after the ocean and atmosphere runs have b\eem complete) show
n
65.035 525.982 216.66 -7.72302 re
1 1 1  setrgbcolor
f
q
n
32 792.06 534.571 -275.516 re
W
n
n
65.035 525.982 216.66 -7.72302 re
0 0 0  setrgbcolor
S
Q
0 0 1  setrgbcolor
65.4643 519.547 m
(After the application completes all iterations of runs for all of the co\mponents then it can continue on the the finalization s) show
392.375 519.547 m
(teps) show
n
74.474 776.965 m
93.78 776.965 l
93.78 772.674 l
74.474 772.674 l
0 0 0  setrgbcolor
S
n
74.903 772.674 m
80.051 775.678 l
80.051 769.671 l
eofill
n
74.903 772.674 m
80.051 775.678 l
80.051 769.671 l
h
S
36.2903 778.252 m
/N23 4.2903 Tf
(1 : Application invokes its own run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 0.952381 1.1927 2.14515 1.1927 2.3854 3.09753 2.3854 1.1927 1.42864 
2.3854 2.3854 1.1927 3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 ] pdfxs
n
74.474 759.804 m
185.164 759.804 l
S
n
184.735 759.804 m
182.589 759.804 l
179.586 762.807 l
eofill
n
184.735 759.804 m
182.589 759.804 l
179.586 762.807 l
h
S
77.4771 761.091 m
(2 : Application invokes the Atmospheres run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 
2.3854 2.3854 2.3854 1.42864 2.3854 2.14515 1.1927 1.42864 2.3854 2.3854 1.1927 
3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 ] pdfxs
n
74.474 742.642 m
291.992 742.642 l
S
n
291.563 742.642 m
289.418 742.642 l
286.415 745.646 l
eofill
n
291.563 742.642 m
289.418 742.642 l
286.415 745.646 l
h
S
136.683 743.929 m
(3 : Application invokes the Ocean run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 
1.1927 1.42864 2.3854 2.3854 1.1927 3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 
] pdfxs
n
185.164 725.481 m
183.018 725.481 l
180.873 725.481 m
178.728 725.481 l
176.583 725.481 m
174.438 725.481 l
172.293 725.481 m
170.148 725.481 l
168.002 725.481 m
165.857 725.481 l
163.712 725.481 m
161.567 725.481 l
159.422 725.481 m
157.277 725.481 l
155.132 725.481 m
152.986 725.481 l
150.841 725.481 m
148.696 725.481 l
146.551 725.481 m
144.406 725.481 l
142.261 725.481 m
140.115 725.481 l
137.97 725.481 m
135.825 725.481 l
133.68 725.481 m
131.535 725.481 l
129.39 725.481 m
127.245 725.481 l
125.099 725.481 m
122.954 725.481 l
120.809 725.481 m
118.664 725.481 l
116.519 725.481 m
114.374 725.481 l
112.229 725.481 m
110.083 725.481 l
107.938 725.481 m
105.793 725.481 l
103.648 725.481 m
101.503 725.481 l
99.358 725.481 m
97.212 725.481 l
95.067 725.481 m
92.922 725.481 l
90.777 725.481 m
88.632 725.481 l
86.487 725.481 m
84.342 725.481 l
82.196 725.481 m
80.051 725.481 l
77.906 725.481 m
75.761 725.481 l
80.051 728.484 m
74.903 725.481 l
80.051 722.478 m
74.903 725.481 l
S
99.7867 718.188 m
(4 : Atmosphere run completes)
[2.3854 1.1927 1.1927 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 
2.3854 1.42864 2.3854 1.1927 1.42864 2.3854 2.3854 1.1927 2.14515 2.3854 3.57379 
2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
n
291.992 708.32 m
289.847 708.32 l
287.702 708.32 m
285.557 708.32 l
283.411 708.32 m
281.266 708.32 l
279.121 708.32 m
276.976 708.32 l
274.831 708.32 m
272.686 708.32 l
270.54 708.32 m
268.395 708.32 l
266.25 708.32 m
264.105 708.32 l
261.96 708.32 m
259.815 708.32 l
257.67 708.32 m
255.524 708.32 l
253.379 708.32 m
251.234 708.32 l
249.089 708.32 m
246.944 708.32 l
244.799 708.32 m
242.654 708.32 l
240.508 708.32 m
238.363 708.32 l
236.218 708.32 m
234.073 708.32 l
231.928 708.32 m
229.783 708.32 l
227.638 708.32 m
225.492 708.32 l
223.347 708.32 m
221.202 708.32 l
219.057 708.32 m
216.912 708.32 l
214.767 708.32 m
212.621 708.32 l
210.476 708.32 m
208.331 708.32 l
206.186 708.32 m
204.041 708.32 l
201.896 708.32 m
199.751 708.32 l
197.605 708.32 m
195.46 708.32 l
193.315 708.32 m
191.17 708.32 l
189.025 708.32 m
186.88 708.32 l
184.735 708.32 m
182.589 708.32 l
180.444 708.32 m
178.299 708.32 l
176.154 708.32 m
174.009 708.32 l
171.864 708.32 m
169.719 708.32 l
167.573 708.32 m
165.428 708.32 l
163.283 708.32 m
161.138 708.32 l
158.993 708.32 m
156.848 708.32 l
154.702 708.32 m
152.557 708.32 l
150.412 708.32 m
148.267 708.32 l
146.122 708.32 m
143.977 708.32 l
141.832 708.32 m
139.686 708.32 l
137.541 708.32 m
135.396 708.32 l
133.251 708.32 m
131.106 708.32 l
128.961 708.32 m
126.816 708.32 l
124.67 708.32 m
122.525 708.32 l
120.38 708.32 m
118.235 708.32 l
116.09 708.32 m
113.945 708.32 l
111.8 708.32 m
109.654 708.32 l
107.509 708.32 m
105.364 708.32 l
103.219 708.32 m
101.074 708.32 l
98.929 708.32 m
96.783 708.32 l
94.638 708.32 m
92.493 708.32 l
90.348 708.32 m
88.203 708.32 l
86.058 708.32 m
83.913 708.32 l
81.767 708.32 m
79.622 708.32 l
77.477 708.32 m
75.332 708.32 l
80.051 711.323 m
74.903 708.32 l
80.051 705.317 m
74.903 708.32 l
S
157.706 701.026 m
(5 : Ocean Run completes)
[2.3854 1.1927 1.1927 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 
2.3854 2.3854 1.1927 2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 
2.14515 ] pdfxs
n
74.474 691.159 m
400.107 691.159 l
S
n
399.678 691.159 m
397.533 691.159 l
394.53 694.162 l
eofill
n
399.678 691.159 m
397.533 691.159 l
394.53 694.162 l
h
S
175.296 692.446 m
(6 : The application invokes the atmosphere to ocean coupler)
[2.3854 1.1927 1.1927 1.1927 2.62134 2.3854 2.3854 1.1927 2.3854 2.3854 2.3854 
0.952381 0.952381 2.14515 2.3854 1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 
2.14515 2.3854 2.14515 2.3854 2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.3854 
1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 2.3854 1.1927 1.1927 
2.3854 1.1927 2.3854 2.14515 2.3854 2.3854 2.3854 1.1927 2.14515 2.3854 2.3854 
2.3854 0.952381 2.3854 1.42864 ] pdfxs
n
74.474 673.998 m
514.658 673.998 l
S
n
514.229 673.998 m
512.084 673.998 l
509.081 677.001 l
eofill
n
514.229 673.998 m
512.084 673.998 l
509.081 677.001 l
h
S
232.786 675.285 m
(7 : The application invokes the ocean to atmosphere coupler)
[2.3854 1.1927 1.1927 1.1927 2.62134 2.3854 2.3854 1.1927 2.3854 2.3854 2.3854 
0.952381 0.952381 2.14515 2.3854 1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 
2.14515 2.3854 2.14515 2.3854 2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.3854 
2.14515 2.3854 2.3854 2.3854 1.1927 1.1927 2.3854 1.1927 2.3854 1.1927 3.57379 
2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 2.3854 1.1927 2.14515 2.3854 2.3854 
2.3854 0.952381 2.3854 1.42864 ] pdfxs
n
400.107 656.836 m
397.962 656.836 l
395.817 656.836 m
393.672 656.836 l
391.527 656.836 m
389.382 656.836 l
387.237 656.836 m
385.091 656.836 l
382.946 656.836 m
380.801 656.836 l
378.656 656.836 m
376.511 656.836 l
374.366 656.836 m
372.221 656.836 l
370.075 656.836 m
367.93 656.836 l
365.785 656.836 m
363.64 656.836 l
361.495 656.836 m
359.35 656.836 l
357.204 656.836 m
355.059 656.836 l
352.914 656.836 m
350.769 656.836 l
348.624 656.836 m
346.479 656.836 l
344.334 656.836 m
342.188 656.836 l
340.043 656.836 m
337.898 656.836 l
335.753 656.836 m
333.608 656.836 l
331.463 656.836 m
329.318 656.836 l
327.172 656.836 m
325.027 656.836 l
322.882 656.836 m
320.737 656.836 l
318.592 656.836 m
316.447 656.836 l
314.302 656.836 m
312.156 656.836 l
310.011 656.836 m
307.866 656.836 l
305.721 656.836 m
303.576 656.836 l
301.431 656.836 m
299.285 656.836 l
297.14 656.836 m
294.995 656.836 l
292.85 656.836 m
290.705 656.836 l
288.56 656.836 m
286.415 656.836 l
284.269 656.836 m
282.124 656.836 l
279.979 656.836 m
277.834 656.836 l
275.689 656.836 m
273.544 656.836 l
271.399 656.836 m
269.253 656.836 l
267.108 656.836 m
264.963 656.836 l
262.818 656.836 m
260.673 656.836 l
258.528 656.836 m
256.383 656.836 l
254.237 656.836 m
252.092 656.836 l
249.947 656.836 m
247.802 656.836 l
245.657 656.836 m
243.512 656.836 l
241.366 656.836 m
239.221 656.836 l
237.076 656.836 m
234.931 656.836 l
232.786 656.836 m
230.641 656.836 l
228.496 656.836 m
226.35 656.836 l
224.205 656.836 m
222.06 656.836 l
219.915 656.836 m
217.77 656.836 l
215.625 656.836 m
213.48 656.836 l
211.334 656.836 m
209.189 656.836 l
207.044 656.836 m
204.899 656.836 l
202.754 656.836 m
200.609 656.836 l
198.464 656.836 m
196.318 656.836 l
194.173 656.836 m
192.028 656.836 l
189.883 656.836 m
187.738 656.836 l
185.593 656.836 m
183.447 656.836 l
181.302 656.836 m
179.157 656.836 l
177.012 656.836 m
174.867 656.836 l
172.722 656.836 m
170.577 656.836 l
168.431 656.836 m
166.286 656.836 l
164.141 656.836 m
161.996 656.836 l
159.851 656.836 m
157.706 656.836 l
155.561 656.836 m
153.415 656.836 l
151.27 656.836 m
149.125 656.836 l
146.98 656.836 m
144.835 656.836 l
142.69 656.836 m
140.544 656.836 l
138.399 656.836 m
136.254 656.836 l
134.109 656.836 m
131.964 656.836 l
129.819 656.836 m
127.674 656.836 l
S
n
125.528 656.836 m
123.383 656.836 l
121.238 656.836 m
119.093 656.836 l
116.948 656.836 m
114.803 656.836 l
112.658 656.836 m
110.512 656.836 l
108.367 656.836 m
106.222 656.836 l
104.077 656.836 m
101.932 656.836 l
99.787 656.836 m
97.642 656.836 l
95.496 656.836 m
93.351 656.836 l
91.206 656.836 m
89.061 656.836 l
86.916 656.836 m
84.771 656.836 l
82.626 656.836 m
80.48 656.836 l
78.335 656.836 m
76.19 656.836 l
80.051 659.84 m
74.903 656.836 l
80.051 653.833 m
74.903 656.836 l
S
191.599 649.543 m
(8 : Atmosphere to Ocean coupling completes)
[2.3854 1.1927 1.1927 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 
2.3854 1.42864 2.3854 1.1927 1.1927 2.3854 1.1927 3.33785 2.14515 2.3854 2.3854 
2.3854 1.1927 2.14515 2.3854 2.3854 2.3854 0.952381 0.952381 2.3854 2.3854 1.1927 
2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
n
514.658 639.675 m
512.513 639.675 l
510.368 639.675 m
508.223 639.675 l
506.078 639.675 m
503.933 639.675 l
501.788 639.675 m
499.642 639.675 l
497.497 639.675 m
495.352 639.675 l
493.207 639.675 m
491.062 639.675 l
488.917 639.675 m
486.771 639.675 l
484.626 639.675 m
482.481 639.675 l
480.336 639.675 m
478.191 639.675 l
476.046 639.675 m
473.901 639.675 l
471.755 639.675 m
469.61 639.675 l
467.465 639.675 m
465.32 639.675 l
463.175 639.675 m
461.03 639.675 l
458.885 639.675 m
456.739 639.675 l
454.594 639.675 m
452.449 639.675 l
450.304 639.675 m
448.159 639.675 l
446.014 639.675 m
443.868 639.675 l
441.723 639.675 m
439.578 639.675 l
437.433 639.675 m
435.288 639.675 l
433.143 639.675 m
430.998 639.675 l
428.852 639.675 m
426.707 639.675 l
424.562 639.675 m
422.417 639.675 l
420.272 639.675 m
418.127 639.675 l
415.982 639.675 m
413.836 639.675 l
411.691 639.675 m
409.546 639.675 l
407.401 639.675 m
405.256 639.675 l
403.111 639.675 m
400.966 639.675 l
398.82 639.675 m
396.675 639.675 l
394.53 639.675 m
392.385 639.675 l
390.24 639.675 m
388.095 639.675 l
385.949 639.675 m
383.804 639.675 l
381.659 639.675 m
379.514 639.675 l
377.369 639.675 m
375.224 639.675 l
373.079 639.675 m
370.933 639.675 l
368.788 639.675 m
366.643 639.675 l
364.498 639.675 m
362.353 639.675 l
360.208 639.675 m
358.063 639.675 l
355.917 639.675 m
353.772 639.675 l
351.627 639.675 m
349.482 639.675 l
347.337 639.675 m
345.192 639.675 l
343.047 639.675 m
340.901 639.675 l
338.756 639.675 m
336.611 639.675 l
334.466 639.675 m
332.321 639.675 l
330.176 639.675 m
328.03 639.675 l
325.885 639.675 m
323.74 639.675 l
321.595 639.675 m
319.45 639.675 l
317.305 639.675 m
315.16 639.675 l
313.014 639.675 m
310.869 639.675 l
308.724 639.675 m
306.579 639.675 l
304.434 639.675 m
302.289 639.675 l
300.144 639.675 m
297.998 639.675 l
295.853 639.675 m
293.708 639.675 l
291.563 639.675 m
289.418 639.675 l
287.273 639.675 m
285.128 639.675 l
282.982 639.675 m
280.837 639.675 l
278.692 639.675 m
276.547 639.675 l
274.402 639.675 m
272.257 639.675 l
270.111 639.675 m
267.966 639.675 l
265.821 639.675 m
263.676 639.675 l
261.531 639.675 m
259.386 639.675 l
257.241 639.675 m
255.095 639.675 l
252.95 639.675 m
250.805 639.675 l
248.66 639.675 m
246.515 639.675 l
244.37 639.675 m
242.225 639.675 l
S
n
240.079 639.675 m
237.934 639.675 l
235.789 639.675 m
233.644 639.675 l
231.499 639.675 m
229.354 639.675 l
227.208 639.675 m
225.063 639.675 l
222.918 639.675 m
220.773 639.675 l
218.628 639.675 m
216.483 639.675 l
214.338 639.675 m
212.192 639.675 l
210.047 639.675 m
207.902 639.675 l
205.757 639.675 m
203.612 639.675 l
201.467 639.675 m
199.322 639.675 l
197.176 639.675 m
195.031 639.675 l
192.886 639.675 m
190.741 639.675 l
188.596 639.675 m
186.451 639.675 l
184.306 639.675 m
182.16 639.675 l
180.015 639.675 m
177.87 639.675 l
175.725 639.675 m
173.58 639.675 l
171.435 639.675 m
169.289 639.675 l
167.144 639.675 m
164.999 639.675 l
162.854 639.675 m
160.709 639.675 l
158.564 639.675 m
156.419 639.675 l
154.273 639.675 m
152.128 639.675 l
149.983 639.675 m
147.838 639.675 l
145.693 639.675 m
143.548 639.675 l
141.403 639.675 m
139.257 639.675 l
137.112 639.675 m
134.967 639.675 l
132.822 639.675 m
130.677 639.675 l
128.532 639.675 m
126.387 639.675 l
124.241 639.675 m
122.096 639.675 l
119.951 639.675 m
117.806 639.675 l
115.661 639.675 m
113.516 639.675 l
111.37 639.675 m
109.225 639.675 l
107.08 639.675 m
104.935 639.675 l
102.79 639.675 m
100.645 639.675 l
98.5 639.675 m
96.354 639.675 l
94.209 639.675 m
92.064 639.675 l
89.919 639.675 m
87.774 639.675 l
85.629 639.675 m
83.484 639.675 l
81.338 639.675 m
79.193 639.675 l
77.048 639.675 m
74.903 639.675 l
80.051 642.678 m
74.903 639.675 l
80.051 636.672 m
74.903 639.675 l
S
248.66 632.382 m
(9 : Ocean to Atmosphere coupling completes)
[2.3854 1.1927 1.1927 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 1.1927 1.1927 
2.3854 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 
2.3854 1.1927 2.14515 2.3854 2.3854 2.3854 0.952381 0.952381 2.3854 2.3854 1.1927 
2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
n
74.474 622.514 m
93.78 622.514 l
93.78 618.224 l
74.474 618.224 l
S
n
74.903 618.224 m
80.051 621.227 l
80.051 615.221 l
eofill
n
74.903 618.224 m
80.051 621.227 l
80.051 615.221 l
h
S
38.8645 623.801 m
(10 : If time to write checkpoint or restart)
[2.3854 2.3854 1.1927 1.1927 1.1927 1.1927 1.1927 1.1927 1.1927 0.952381 3.57379 
2.3854 1.1927 1.1927 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 2.3854 1.1927 
2.14515 2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 1.1927 
2.3854 1.42864 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 ] pdfxs
n
74.474 605.353 m
185.164 605.353 l
S
n
184.735 605.353 m
182.589 605.353 l
179.586 608.356 l
eofill
n
184.735 605.353 m
182.589 605.353 l
179.586 608.356 l
h
S
100.216 606.64 m
(10.1 : write restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 3.09753 1.42864 0.952381 1.1927 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
n
74.474 588.192 m
291.992 588.192 l
S
n
291.563 588.192 m
289.418 588.192 l
286.415 591.195 l
eofill
n
291.563 588.192 m
289.418 588.192 l
286.415 591.195 l
h
S
153.415 589.479 m
(10.2 : write restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 3.09753 1.42864 0.952381 1.1927 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
n
185.164 571.03 m
183.018 571.03 l
180.873 571.03 m
178.728 571.03 l
176.583 571.03 m
174.438 571.03 l
172.293 571.03 m
170.148 571.03 l
168.002 571.03 m
165.857 571.03 l
163.712 571.03 m
161.567 571.03 l
159.422 571.03 m
157.277 571.03 l
155.132 571.03 m
152.986 571.03 l
150.841 571.03 m
148.696 571.03 l
146.551 571.03 m
144.406 571.03 l
142.261 571.03 m
140.115 571.03 l
137.97 571.03 m
135.825 571.03 l
133.68 571.03 m
131.535 571.03 l
129.39 571.03 m
127.245 571.03 l
125.099 571.03 m
122.954 571.03 l
120.809 571.03 m
118.664 571.03 l
116.519 571.03 m
114.374 571.03 l
112.229 571.03 m
110.083 571.03 l
107.938 571.03 m
105.793 571.03 l
103.648 571.03 m
101.503 571.03 l
99.358 571.03 m
97.212 571.03 l
95.067 571.03 m
92.922 571.03 l
90.777 571.03 m
88.632 571.03 l
86.487 571.03 m
84.342 571.03 l
82.196 571.03 m
80.051 571.03 l
77.906 571.03 m
75.761 571.03 l
80.051 574.034 m
74.903 571.03 l
80.051 568.027 m
74.903 571.03 l
S
89.919 563.737 m
(10.3 : finished writing restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 1.1927 0.952381 2.3854 0.952381 
2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 0.952381 2.3854 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
n
291.992 553.869 m
289.847 553.869 l
287.702 553.869 m
285.557 553.869 l
283.411 553.869 m
281.266 553.869 l
279.121 553.869 m
276.976 553.869 l
274.831 553.869 m
272.686 553.869 l
270.54 553.869 m
268.395 553.869 l
266.25 553.869 m
264.105 553.869 l
261.96 553.869 m
259.815 553.869 l
257.67 553.869 m
255.524 553.869 l
253.379 553.869 m
251.234 553.869 l
249.089 553.869 m
246.944 553.869 l
244.799 553.869 m
242.654 553.869 l
240.508 553.869 m
238.363 553.869 l
236.218 553.869 m
234.073 553.869 l
231.928 553.869 m
229.783 553.869 l
227.638 553.869 m
225.492 553.869 l
223.347 553.869 m
221.202 553.869 l
219.057 553.869 m
216.912 553.869 l
214.767 553.869 m
212.621 553.869 l
210.476 553.869 m
208.331 553.869 l
206.186 553.869 m
204.041 553.869 l
201.896 553.869 m
199.751 553.869 l
197.605 553.869 m
195.46 553.869 l
193.315 553.869 m
191.17 553.869 l
189.025 553.869 m
186.88 553.869 l
184.735 553.869 m
182.589 553.869 l
180.444 553.869 m
178.299 553.869 l
176.154 553.869 m
174.009 553.869 l
171.864 553.869 m
169.719 553.869 l
167.573 553.869 m
165.428 553.869 l
163.283 553.869 m
161.138 553.869 l
158.993 553.869 m
156.848 553.869 l
154.702 553.869 m
152.557 553.869 l
150.412 553.869 m
148.267 553.869 l
146.122 553.869 m
143.977 553.869 l
141.832 553.869 m
139.686 553.869 l
137.541 553.869 m
135.396 553.869 l
133.251 553.869 m
131.106 553.869 l
128.961 553.869 m
126.816 553.869 l
124.67 553.869 m
122.525 553.869 l
120.38 553.869 m
118.235 553.869 l
116.09 553.869 m
113.945 553.869 l
111.8 553.869 m
109.654 553.869 l
107.509 553.869 m
105.364 553.869 l
103.219 553.869 m
101.074 553.869 l
98.929 553.869 m
96.783 553.869 l
94.638 553.869 m
92.493 553.869 l
90.348 553.869 m
88.203 553.869 l
86.058 553.869 m
83.913 553.869 l
81.767 553.869 m
79.622 553.869 l
77.477 553.869 m
75.332 553.869 l
80.051 556.872 m
74.903 553.869 l
80.051 550.866 m
74.903 553.869 l
S
143.548 546.576 m
(10.4 : finished writing restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 1.1927 0.952381 2.3854 0.952381 
2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 0.952381 2.3854 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
36.2902 778.252 m
(1 : Application invokes its own run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 0.952381 1.1927 2.14515 1.1927 2.3854 3.09753 2.3854 1.1927 1.42864 
2.3854 2.3854 1.1927 3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 ] pdfxs
77.4771 761.091 m
(2 : Application invokes the Atmospheres run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 
2.3854 2.3854 2.3854 1.42864 2.3854 2.14515 1.1927 1.42864 2.3854 2.3854 1.1927 
3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 ] pdfxs
136.683 743.93 m
(3 : Application invokes the Ocean run method)
[2.3854 1.1927 1.1927 1.1927 2.8616 2.3854 2.3854 0.952381 0.952381 2.14515 2.3854 
1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 2.14515 2.3854 2.14515 2.3854 
2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 
1.1927 1.42864 2.3854 2.3854 1.1927 3.57379 2.3854 1.1927 2.3854 2.3854 2.3854 
] pdfxs
99.7867 718.188 m
(4 : Atmosphere run completes)
[2.3854 1.1927 1.1927 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 
2.3854 1.42864 2.3854 1.1927 1.42864 2.3854 2.3854 1.1927 2.14515 2.3854 3.57379 
2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
157.706 701.027 m
(5 : Ocean Run completes)
[2.3854 1.1927 1.1927 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 
2.3854 2.3854 1.1927 2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 
2.14515 ] pdfxs
175.296 692.446 m
(6 : The application invokes the atmosphere to ocean coupler)
[2.3854 1.1927 1.1927 1.1927 2.62134 2.3854 2.3854 1.1927 2.3854 2.3854 2.3854 
0.952381 0.952381 2.14515 2.3854 1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 
2.14515 2.3854 2.14515 2.3854 2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.3854 
1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 2.3854 1.1927 1.1927 
2.3854 1.1927 2.3854 2.14515 2.3854 2.3854 2.3854 1.1927 2.14515 2.3854 2.3854 
2.3854 0.952381 2.3854 1.42864 ] pdfxs
232.786 675.285 m
(7 : The application invokes the ocean to atmosphere coupler)
[2.3854 1.1927 1.1927 1.1927 2.62134 2.3854 2.3854 1.1927 2.3854 2.3854 2.3854 
0.952381 0.952381 2.14515 2.3854 1.1927 0.952381 2.3854 2.3854 1.1927 0.952381 2.3854 
2.14515 2.3854 2.14515 2.3854 2.14515 1.1927 1.1927 2.3854 2.3854 1.1927 2.3854 
2.14515 2.3854 2.3854 2.3854 1.1927 1.1927 2.3854 1.1927 2.3854 1.1927 3.57379 
2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 2.3854 1.1927 2.14515 2.3854 2.3854 
2.3854 0.952381 2.3854 1.42864 ] pdfxs
191.599 649.543 m
(8 : Atmosphere to Ocean coupling completes)
[2.3854 1.1927 1.1927 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 
2.3854 1.42864 2.3854 1.1927 1.1927 2.3854 1.1927 3.33785 2.14515 2.3854 2.3854 
2.3854 1.1927 2.14515 2.3854 2.3854 2.3854 0.952381 0.952381 2.3854 2.3854 1.1927 
2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
248.66 632.382 m
(9 : Ocean to Atmosphere coupling completes)
[2.3854 1.1927 1.1927 1.1927 3.33785 2.14515 2.3854 2.3854 2.3854 1.1927 1.1927 
2.3854 1.1927 2.8616 1.1927 3.57379 2.3854 2.14515 2.3854 2.3854 2.3854 1.42864 
2.3854 1.1927 2.14515 2.3854 2.3854 2.3854 0.952381 0.952381 2.3854 2.3854 1.1927 
2.14515 2.3854 3.57379 2.3854 0.952381 2.3854 1.1927 2.3854 2.14515 ] pdfxs
38.8644 623.801 m
(10 : If time to write checkpoint or restart)
[2.3854 2.3854 1.1927 1.1927 1.1927 1.1927 1.1927 1.1927 1.1927 0.952381 3.57379 
2.3854 1.1927 1.1927 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 2.3854 1.1927 
2.14515 2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 1.1927 
2.3854 1.42864 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 ] pdfxs
100.216 606.64 m
(10.1 : write restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 3.09753 1.42864 0.952381 1.1927 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
153.415 589.479 m
(10.2 : write restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 3.09753 1.42864 0.952381 1.1927 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
89.919 563.737 m
(10.3 : finished writing restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 1.1927 0.952381 2.3854 0.952381 
2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 0.952381 2.3854 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
143.548 546.576 m
(10.4 : finished writing restart/checkpoint)
[2.3854 2.3854 1.1927 2.3854 1.1927 1.1927 1.1927 1.1927 0.952381 2.3854 0.952381 
2.14515 2.3854 2.3854 2.3854 1.1927 3.09753 1.42864 0.952381 1.1927 0.952381 2.3854 
2.3854 1.1927 1.42864 2.3854 2.14515 1.1927 2.3854 1.42864 1.1927 1.1927 2.14515 
2.3854 2.3854 2.14515 2.14515 2.3854 2.3854 0.952381 2.3854 1.1927 ] pdfxs
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica
%%EOF
